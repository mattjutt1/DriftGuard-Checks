{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/convex/_generated/api.js"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated `api` utility.\n *\n * THIS CODE IS AUTOMATICALLY GENERATED.\n *\n * To regenerate, run `npx convex dev`.\n * @module\n */\n\nimport { anyApi } from \"convex/server\";\n\n/**\n * A utility for referencing Convex functions in your app's API.\n *\n * Usage:\n * ```js\n * const myFunctionReference = api.myModule.myFunction;\n * ```\n */\nexport const api = anyApi;\nexport const internal = anyApi;\n"],"names":[],"mappings":"AAAA,kBAAkB,GAClB;;;;;;;CAOC;;;;AAED;AAAA;;AAUO,MAAM,MAAM,yJAAA,CAAA,SAAM;AAClB,MAAM,WAAW,yJAAA,CAAA,SAAM","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/hooks/useOptimization.ts"],"sourcesContent":["/**\n * Custom React Hook for Prompt Optimization\n * Provides complete integration with Convex backend for PromptWizard optimization\n */\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { useMutation, useQuery } from 'convex/react';\nimport { api } from '../../convex/_generated/api';\nimport { Id } from '../../convex/_generated/dataModel';\n\n// TypeScript interfaces matching backend schema\nexport interface OptimizationMetrics {\n  clarity: number;\n  specificity: number;\n  engagement: number;\n  structure: number;\n  completeness: number;\n  errorPrevention: number;\n  overall: number;\n}\n\nexport interface ProgressStep {\n  step: string;\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  timestamp: number;\n  details?: string;\n}\n\nexport interface MutationHistoryItem {\n  iteration: number;\n  round: number;\n  mutationType: 'specific' | 'engaging' | 'structured';\n  originalPrompt: string;\n  mutatedPrompt: string;\n  qualityScores: OptimizationMetrics;\n  timestamp: number;\n}\n\nexport interface OptimizationResults {\n  bestPrompt: string;\n  improvements: string[];\n  qualityMetrics: OptimizationMetrics;\n  reasoning?: string;\n  expertInsights?: string[];\n}\n\nexport interface OptimizationSession {\n  _id: Id<'optimizationSessions'>;\n  promptId: Id<'prompts'>;\n  userId: Id<'users'>;\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  processingTimeMs?: number;\n  qualityScore?: number;\n  iterationsCompleted?: number;\n  currentIteration?: number;\n  errorMessage?: string;\n  expertIdentity?: string;\n  progressSteps?: ProgressStep[];\n  mutationHistory?: MutationHistoryItem[];\n  finalResults?: OptimizationResults;\n  createdAt: number;\n  updatedAt?: number;\n}\n\nexport interface OptimizationHookState {\n  // Core state\n  isOptimizing: boolean;\n  currentSession: OptimizationSession | null;\n  error: string | null;\n  \n  // Progress tracking\n  currentStep: number;\n  totalSteps: number;\n  progressMessage: string;\n  currentIteration: number;\n  \n  // Results\n  results: OptimizationResults | null;\n  qualityMetrics: OptimizationMetrics | null;\n  \n  // Actions\n  startOptimization: (prompt: string, contextDomain?: string, advanced?: boolean, iterations?: number) => Promise<void>;\n  resetOptimization: () => void;\n  retryOptimization: () => Promise<void>;\n  \n  // Health check\n  checkOllamaHealth: () => Promise<{ available: boolean; model: string; error?: string }>;\n}\n\n/**\n * Main optimization hook\n */\nexport function useOptimization(): OptimizationHookState {\n  // Local state\n  const [isOptimizing, setIsOptimizing] = useState(false);\n  const [currentSessionId, setCurrentSessionId] = useState<Id<'optimizationSessions'> | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(0);\n  const [progressMessage, setProgressMessage] = useState('');\n  const [currentIteration, setCurrentIteration] = useState(0);\n  const [results, setResults] = useState<OptimizationResults | null>(null);\n  const [qualityMetrics, setQualityMetrics] = useState<OptimizationMetrics | null>(null);\n  const [lastOptimizationParams, setLastOptimizationParams] = useState<{\n    prompt: string;\n    contextDomain?: string;\n    advanced?: boolean;\n    iterations?: number;\n  } | null>(null);\n\n  // Convex mutations\n  const createOptimization = useMutation(api.optimizations.createOptimizationRequest);\n  const quickOptimize = useMutation(api.actions.quickOptimize);\n  const advancedOptimize = useMutation(api.actions.advancedOptimize);\n  const ollamaHealth = useMutation(api.actions.checkOllamaHealth);\n\n  // Convex queries - get current session data\n  const currentSession = useQuery(\n    api.optimizations.getSession,\n    currentSessionId ? { sessionId: currentSessionId } : 'skip'\n  );\n\n  // Real-time progress tracking\n  useEffect(() => {\n    if (currentSession && isOptimizing) {\n      // Update progress based on session state\n      if (currentSession.progressSteps) {\n        const completedSteps = currentSession.progressSteps.filter(step => step.status === 'completed').length;\n        const processingSteps = currentSession.progressSteps.filter(step => step.status === 'processing').length;\n        \n        setCurrentStep(completedSteps + processingSteps);\n        setTotalSteps(currentSession.progressSteps.length);\n        \n        // Find current processing step for message\n        const processingStep = currentSession.progressSteps.find(step => step.status === 'processing');\n        if (processingStep) {\n          setProgressMessage(processingStep.step);\n        }\n      }\n\n      // Update current iteration\n      if (currentSession.currentIteration) {\n        setCurrentIteration(currentSession.currentIteration);\n      }\n\n      // Check if optimization completed\n      if (currentSession.status === 'completed') {\n        setIsOptimizing(false);\n        if (currentSession.finalResults) {\n          setResults(currentSession.finalResults);\n          setQualityMetrics(currentSession.finalResults.qualityMetrics);\n        }\n        setProgressMessage('Optimization completed successfully!');\n      }\n\n      // Check if optimization failed\n      if (currentSession.status === 'failed') {\n        setIsOptimizing(false);\n        setError(currentSession.errorMessage || 'Optimization failed');\n        setProgressMessage('Optimization failed');\n      }\n    }\n  }, [currentSession, isOptimizing]);\n\n  // Start optimization function\n  const startOptimization = useCallback(async (\n    prompt: string,\n    contextDomain?: string,\n    advanced = false,\n    iterations = 2\n  ) => {\n    if (!prompt.trim()) {\n      setError('Prompt cannot be empty');\n      return;\n    }\n\n    try {\n      // Reset state\n      setIsOptimizing(true);\n      setError(null);\n      setCurrentStep(0);\n      setTotalSteps(0);\n      setProgressMessage('Starting optimization...');\n      setCurrentIteration(0);\n      setResults(null);\n      setQualityMetrics(null);\n      \n      // Store params for retry\n      setLastOptimizationParams({ prompt, contextDomain, advanced, iterations });\n\n      // Create optimization session\n      const sessionId = await createOptimization({\n        originalPrompt: prompt,\n        contextDomain: contextDomain || undefined,\n      });\n\n      setCurrentSessionId(sessionId);\n      setProgressMessage(advanced ? 'Running advanced PromptWizard optimization...' : 'Running quick optimization...');\n\n      // Start optimization\n      let result;\n      if (advanced) {\n        setTotalSteps(3); // expert identity, iterations, finalization\n        result = await advancedOptimize({ \n          sessionId, \n          maxIterations: iterations \n        });\n      } else {\n        setTotalSteps(4); // expert identity, mutations, selection, improvements\n        result = await quickOptimize({ sessionId });\n      }\n\n      if (!result.success) {\n        throw new Error(result.error || 'Optimization failed');\n      }\n\n    } catch (err) {\n      console.error('Optimization error:', err);\n      setIsOptimizing(false);\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred');\n      setProgressMessage('Optimization failed');\n    }\n  }, [createOptimization, quickOptimize, advancedOptimize]);\n\n  // Reset optimization state\n  const resetOptimization = useCallback(() => {\n    setIsOptimizing(false);\n    setCurrentSessionId(null);\n    setError(null);\n    setCurrentStep(0);\n    setTotalSteps(0);\n    setProgressMessage('');\n    setCurrentIteration(0);\n    setResults(null);\n    setQualityMetrics(null);\n    setLastOptimizationParams(null);\n  }, []);\n\n  // Retry last optimization\n  const retryOptimization = useCallback(async () => {\n    if (lastOptimizationParams) {\n      await startOptimization(\n        lastOptimizationParams.prompt,\n        lastOptimizationParams.contextDomain,\n        lastOptimizationParams.advanced,\n        lastOptimizationParams.iterations\n      );\n    }\n  }, [lastOptimizationParams, startOptimization]);\n\n  // Health check function\n  const checkOllamaHealth = useCallback(async () => {\n    try {\n      const health = await ollamaHealth({});\n      return health;\n    } catch (err) {\n      return {\n        available: false,\n        model: 'qwen3:4b',\n        error: err instanceof Error ? err.message : 'Health check failed',\n      };\n    }\n  }, [ollamaHealth]);\n\n  return {\n    // Core state\n    isOptimizing,\n    currentSession,\n    error,\n    \n    // Progress tracking\n    currentStep,\n    totalSteps,\n    progressMessage,\n    currentIteration,\n    \n    // Results\n    results,\n    qualityMetrics,\n    \n    // Actions\n    startOptimization,\n    resetOptimization,\n    retryOptimization,\n    checkOllamaHealth,\n  };\n}\n\n/**\n * Hook for accessing optimization history\n */\nexport function useOptimizationHistory(limit = 10) {\n  const recentSessions = useQuery(api.sessions.getRecentSessions, { limit });\n  \n  return {\n    sessions: recentSessions || [],\n    isLoading: recentSessions === undefined,\n  };\n}\n\n/**\n * Hook for managing user feedback\n */\nexport function useFeedback() {\n  const submitFeedback = useMutation(api.sessions.submitFeedback);\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const submitOptimizationFeedback = useCallback(async (\n    sessionId: Id<'optimizationSessions'>,\n    rating: number,\n    feedbackText?: string,\n    improvementSuggestions?: string[],\n    isHelpful?: boolean\n  ) => {\n    try {\n      setIsSubmitting(true);\n      setError(null);\n      \n      await submitFeedback({\n        sessionId,\n        rating,\n        feedbackText,\n        improvementSuggestions,\n        isHelpful,\n      });\n      \n      return true;\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to submit feedback');\n      return false;\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [submitFeedback]);\n\n  return {\n    submitOptimizationFeedback,\n    isSubmitting,\n    error,\n  };\n}\n\n/**\n * Hook for error handling with automatic retry logic\n */\nexport function useOptimizationErrorHandler() {\n  const [retryCount, setRetryCount] = useState(0);\n  const [isRetrying, setIsRetrying] = useState(false);\n  \n  const handleError = useCallback((error: string, retryFunction?: () => Promise<void>) => {\n    console.error('Optimization error:', error);\n    \n    // Auto-retry logic for transient errors\n    const isTransientError = error.includes('connection') || \n                           error.includes('timeout') || \n                           error.includes('network');\n    \n    if (isTransientError && retryCount < 3 && retryFunction) {\n      setTimeout(async () => {\n        setIsRetrying(true);\n        setRetryCount(prev => prev + 1);\n        \n        try {\n          await retryFunction();\n          setRetryCount(0);\n        } catch (err) {\n          console.error('Retry failed:', err);\n        } finally {\n          setIsRetrying(false);\n        }\n      }, Math.pow(2, retryCount) * 1000); // Exponential backoff\n    }\n  }, [retryCount]);\n\n  const resetRetry = useCallback(() => {\n    setRetryCount(0);\n    setIsRetrying(false);\n  }, []);\n\n  return {\n    handleError,\n    retryCount,\n    isRetrying,\n    resetRetry,\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/hooks/useDirectOptimization.ts"],"sourcesContent":["/**\n * Direct API Optimization Hook\n * Bypasses Convex to call our local API route that connects directly to Ollama + Qwen3:4b\n */\n\nimport { useState, useCallback } from 'react';\n\n// TypeScript interfaces\nexport interface OptimizationMetrics {\n  clarity: number;\n  specificity: number;\n  engagement: number;\n  structure: number;\n  completeness: number;\n  errorPrevention: number;\n  overall: number;\n}\n\nexport interface OptimizationResults {\n  bestPrompt: string;\n  improvements: string[];\n  qualityMetrics: OptimizationMetrics;\n  expertInsights: string[];\n  originalPrompt: string;\n  contextDomain: string;\n  useAdvancedMode: boolean;\n  processingTime: number;\n}\n\nexport interface DirectOptimizationHookState {\n  // Core state\n  isOptimizing: boolean;\n  error: string | null;\n  \n  // Progress tracking\n  currentStep: number;\n  totalSteps: number;\n  progressMessage: string;\n  currentIteration: number;\n  \n  // Results\n  results: OptimizationResults | null;\n  qualityMetrics: OptimizationMetrics | null;\n  currentSession: any; // Mock session for compatibility\n  \n  // Actions\n  startOptimization: (prompt: string, contextDomain?: string, advanced?: boolean, iterations?: number) => Promise<void>;\n  resetOptimization: () => void;\n  checkOllamaHealth: () => Promise<{ available: boolean; model: string; error?: string }>;\n}\n\n// Mock session data for compatibility\nconst createMockSession = (results: OptimizationResults) => ({\n  _id: `session-${Date.now()}`,\n  status: 'completed',\n  iterationsCompleted: 3,\n  processingTimeMs: 45000,\n  qualityScore: results.qualityMetrics.overall,\n  prompt: {\n    originalPrompt: results.originalPrompt\n  },\n  createdAt: Date.now()\n});\n\n/**\n * Direct optimization hook that calls our API route instead of Convex\n */\nexport function useDirectOptimization(): DirectOptimizationHookState {\n  // Local state\n  const [isOptimizing, setIsOptimizing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(4);\n  const [progressMessage, setProgressMessage] = useState('');\n  const [currentIteration, setCurrentIteration] = useState(0);\n  const [results, setResults] = useState<OptimizationResults | null>(null);\n  const [qualityMetrics, setQualityMetrics] = useState<OptimizationMetrics | null>(null);\n  const [currentSession, setCurrentSession] = useState<any>(null);\n\n  // Simulate progress steps\n  const simulateProgress = async (steps: string[]) => {\n    setTotalSteps(steps.length);\n    \n    for (let i = 0; i < steps.length; i++) {\n      setCurrentStep(i + 1);\n      setProgressMessage(steps[i]);\n      setCurrentIteration(i + 1);\n      \n      // Simulate processing time\n      await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 1500));\n    }\n  };\n\n  // Start optimization function\n  const startOptimization = useCallback(async (\n    prompt: string,\n    contextDomain = 'general',\n    advanced = false,\n    iterations = 2\n  ) => {\n    if (!prompt.trim()) {\n      setError('Prompt cannot be empty');\n      return;\n    }\n\n    try {\n      // Reset state\n      setIsOptimizing(true);\n      setError(null);\n      setCurrentStep(0);\n      setProgressMessage('Initializing optimization...');\n      setCurrentIteration(0);\n      setResults(null);\n      setQualityMetrics(null);\n      setCurrentSession(null);\n\n      console.log('🚀 DIRECT API: Starting real optimization');\n      console.log('🚀 DIRECT API: Prompt:', prompt.substring(0, 50) + '...');\n      console.log('🚀 DIRECT API: Domain:', contextDomain);\n      console.log('🚀 DIRECT API: Advanced:', advanced);\n\n      // Define progress steps based on mode\n      const progressSteps = advanced ? [\n        'Generating expert identity...',\n        'Applying PromptWizard methodology...',\n        'Processing with Qwen3:4b model...',\n        'Calculating quality metrics...',\n        'Finalizing optimization...'\n      ] : [\n        'Analyzing prompt structure...',\n        'Applying critique_n_refine...',\n        'Processing with Qwen3:4b...',\n        'Generating improvements...'\n      ];\n\n      // Start progress simulation\n      const progressPromise = simulateProgress(progressSteps);\n\n      // Call our direct API route\n      const response = await fetch('/api/optimize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt: prompt.trim(),\n          contextDomain,\n          useAdvancedMode: advanced\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'API request failed');\n      }\n\n      const data = await response.json();\n\n      if (!data.success) {\n        throw new Error(data.error || 'Optimization failed');\n      }\n\n      // Wait for progress simulation to complete\n      await progressPromise;\n\n      // Set final results\n      setResults(data.result);\n      setQualityMetrics(data.result.qualityMetrics);\n      setCurrentSession(createMockSession(data.result));\n      setProgressMessage('Optimization completed successfully!');\n\n      console.log('🚀 DIRECT API: Optimization completed successfully');\n      console.log('🚀 DIRECT API: Quality score:', data.result.qualityMetrics.overall);\n\n    } catch (err) {\n      console.error('🚀 DIRECT API: Optimization error:', err);\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred');\n      setProgressMessage('Optimization failed');\n    } finally {\n      setIsOptimizing(false);\n    }\n  }, []);\n\n  // Reset optimization state\n  const resetOptimization = useCallback(() => {\n    setIsOptimizing(false);\n    setError(null);\n    setCurrentStep(0);\n    setTotalSteps(4);\n    setProgressMessage('');\n    setCurrentIteration(0);\n    setResults(null);\n    setQualityMetrics(null);\n    setCurrentSession(null);\n  }, []);\n\n  // Health check function\n  const checkOllamaHealth = useCallback(async () => {\n    try {\n      console.log('🩺 HEALTH CHECK: Testing direct API connection...');\n      \n      const response = await fetch('/api/optimize', {\n        method: 'GET',\n      });\n\n      if (response.ok) {\n        const healthData = await response.json();\n        console.log('🩺 HEALTH CHECK: Success -', healthData);\n        \n        return {\n          available: healthData.status === 'healthy',\n          model: healthData.model || 'qwen3:4b',\n          error: healthData.status !== 'healthy' ? healthData.error : undefined,\n        };\n      } else {\n        throw new Error(`Health check failed: ${response.status}`);\n      }\n    } catch (err) {\n      console.error('🩺 HEALTH CHECK: Error -', err);\n      \n      return {\n        available: false,\n        model: 'qwen3:4b',\n        error: err instanceof Error ? err.message : 'Health check failed',\n      };\n    }\n  }, []);\n\n  return {\n    // Core state\n    isOptimizing,\n    error,\n    \n    // Progress tracking\n    currentStep,\n    totalSteps,\n    progressMessage,\n    currentIteration,\n    \n    // Results\n    results,\n    qualityMetrics,\n    currentSession,\n    \n    // Actions\n    startOptimization,\n    resetOptimization,\n    checkOllamaHealth,\n  };\n}\n\n// Mock history hook for compatibility\nexport function useDirectOptimizationHistory(limit = 10) {\n  // Return empty array for now - could implement localStorage-based history later\n  return {\n    sessions: [],\n    isLoading: false,\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/components/OptimizationForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\n\ninterface OptimizationFormProps {\n  onOptimize: (prompt: string, contextDomain: string, useAdvancedMode: boolean, iterations: number) => Promise<void>;\n  isOptimizing: boolean;\n  useAdvancedMode: boolean;\n  setUseAdvancedMode: (value: boolean) => void;\n}\n\nexport function OptimizationForm({ onOptimize, isOptimizing, useAdvancedMode, setUseAdvancedMode }: OptimizationFormProps) {\n  const [prompt, setPrompt] = useState(\"\");\n  const [contextDomain, setContextDomain] = useState(\"\");\n  const [iterations, setIterations] = useState(2);\n\n  const handleOptimize = async (advancedMode?: boolean) => {\n    if (!prompt.trim()) return;\n\n    const isAdvanced = advancedMode ?? useAdvancedMode;\n    \n    try {\n      await onOptimize(prompt, contextDomain, isAdvanced, iterations);\n      \n      // Clear form on successful start\n      setPrompt(\"\");\n      setContextDomain(\"\");\n    } catch (error) {\n      console.error(\"Failed to start optimization:\", error);\n    }\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Mode Information Panel */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className={`p-4 rounded-lg border-2 transition-all ${\n          !useAdvancedMode ? \"border-blue-200 bg-blue-50\" : \"border-gray-200 bg-gray-50\"\n        }`}>\n          <h4 className=\"font-semibold text-blue-900 mb-2\">Quick Optimize</h4>\n          <p className=\"text-sm text-gray-600\">Single-pass optimization with basic system prompts</p>\n          <div className=\"mt-2 text-xs text-gray-500\">⏱️ 60-90 seconds • 🔧 Development demo</div>\n        </div>\n        <div className={`p-4 rounded-lg border-2 transition-all ${\n          useAdvancedMode ? \"border-purple-200 bg-purple-50\" : \"border-gray-200 bg-gray-50\"\n        }`}>\n          <h4 className=\"font-semibold text-purple-900 mb-2\">Advanced Mode</h4>\n          <p className=\"text-sm text-gray-600\">Multi-iteration refinement with multiple system prompts</p>\n          <div className=\"mt-2 text-xs text-gray-500\">⏱️ 90-120 seconds • 🔧 Development demo</div>\n        </div>\n      </div>\n      \n      {/* Advanced Mode Controls */}\n      {useAdvancedMode && (\n        <div className=\"p-4 bg-purple-50 rounded-lg border border-purple-200\">\n          <label className=\"block text-sm font-medium text-purple-900 mb-2\">\n            Optimization Iterations: {iterations}\n          </label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"5\"\n            value={iterations}\n            onChange={(e) => setIterations(parseInt(e.target.value))}\n            className=\"w-full h-2 bg-purple-200 rounded-lg appearance-none cursor-pointer slider\"\n            disabled={isOptimizing}\n          />\n          <div className=\"flex justify-between text-xs text-purple-600 mt-1\">\n            <span>1 (Fast)</span>\n            <span>3 (Balanced)</span>\n            <span>5 (Thorough)</span>\n          </div>\n        </div>\n      )}\n\n      {/* Main Input Form */}\n      <div className=\"space-y-6\">\n        <div>\n          <label htmlFor=\"prompt\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Original Prompt *\n          </label>\n          <div className=\"relative\">\n            <textarea\n              id=\"prompt\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              placeholder=\"Enter the prompt you'd like to optimize using Microsoft PromptWizard techniques...\"\n              className=\"w-full h-40 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-sm leading-relaxed\"\n              disabled={isOptimizing}\n            />\n            <div className=\"absolute bottom-3 right-3 text-xs text-gray-400\">\n              {prompt.length} characters\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <label htmlFor=\"context\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Context Domain (Optional)\n          </label>\n          <input\n            id=\"context\"\n            type=\"text\"\n            value={contextDomain}\n            onChange={(e) => setContextDomain(e.target.value)}\n            placeholder=\"e.g., marketing, technical documentation, creative writing, data analysis...\"\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            disabled={isOptimizing}\n          />\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"space-y-3\">\n          <button\n            onClick={() => handleOptimize()}\n            disabled={!prompt.trim() || isOptimizing}\n            className={`w-full py-4 px-6 font-semibold rounded-lg transition-all duration-200 ${\n              useAdvancedMode\n                ? \"bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white shadow-lg\"\n                : \"bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white shadow-lg\"\n            } disabled:bg-gray-400 disabled:cursor-not-allowed disabled:shadow-none`}\n          >\n            {isOptimizing ? (\n              <div className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                {useAdvancedMode ? \"Processing Advanced Optimization...\" : \"Optimizing...\"}\n              </div>\n            ) : (\n              <div className=\"flex items-center justify-center\">\n                <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n                {useAdvancedMode ? \"Start Advanced Optimization\" : \"Quick Optimize\"}\n              </div>\n            )}\n          </button>\n          \n          <div className=\"bg-amber-50 border border-amber-200 rounded p-3 mt-2\">\n            <p className=\"text-xs text-amber-800 text-center px-4\">\n              ⚠️ {useAdvancedMode \n                ? `Processing will take 90-120 seconds. This is a development demo using basic system prompts.`\n                : \"Processing will take 60-90 seconds. This is a development demo using basic system prompts.\"\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/components/ProgressDisplay.tsx"],"sourcesContent":["\"use client\";\n\ninterface ProgressDisplayProps {\n  isOptimizing: boolean;\n  currentStep: number;\n  totalSteps: number;\n  message: string;\n}\n\nexport function ProgressDisplay({ isOptimizing, currentStep, totalSteps, message }: ProgressDisplayProps) {\n  if (!isOptimizing) return null;\n\n  const progress = totalSteps > 0 ? (currentStep / totalSteps) * 100 : 0;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-8 max-w-md w-full mx-4\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <h3 className=\"text-lg font-semibold mb-2\">Optimizing Prompt</h3>\n          <p className=\"text-gray-600 mb-4\">{message}</p>\n          \n          {totalSteps > 0 && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm text-gray-600\">\n                <span>Step {currentStep} of {totalSteps}</span>\n                <span>{Math.round(progress)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${progress}%` }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AASO,SAAS,gBAAgB,KAAwE;QAAxE,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAwB,GAAxE;IAC9B,IAAI,CAAC,cAAc,OAAO;IAE1B,MAAM,WAAW,aAAa,IAAI,AAAC,cAAc,aAAc,MAAM;IAErE,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;;;;;kCACf,6LAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,6LAAC;wBAAE,WAAU;kCAAsB;;;;;;oBAElC,aAAa,mBACZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;;4CAAK;4CAAM;4CAAY;4CAAK;;;;;;;kDAC7B,6LAAC;;4CAAM,KAAK,KAAK,CAAC;4CAAU;;;;;;;;;;;;;0CAE9B,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,WAAU;oCACV,OAAO;wCAAE,OAAO,AAAC,GAAW,OAAT,UAAS;oCAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASjD;KA/BgB","debugId":null}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/components/QualityMetrics.tsx"],"sourcesContent":["\"use client\";\n\nimport { OptimizationMetrics } from \"../hooks/useOptimization\";\n\n// UI Component Types\ninterface ProgressBarProps {\n  label: string;\n  value: number;\n  maxValue?: number;\n  className?: string;\n  showValue?: boolean;\n}\n\ninterface QualityMetricsProps {\n  metrics: OptimizationMetrics;\n  overallScore?: number;\n}\n\n// Progress Bar Component\nfunction ProgressBar({ label, value, maxValue = 10, className = \"\", showValue = true }: ProgressBarProps) {\n  const percentage = Math.min((value / maxValue) * 100, 100);\n  \n  const getColorClass = (percentage: number) => {\n    if (percentage >= 80) return \"bg-emerald-500\";\n    if (percentage >= 60) return \"bg-blue-500\";\n    if (percentage >= 40) return \"bg-yellow-500\";\n    return \"bg-red-500\";\n  };\n\n  return (\n    <div className={`space-y-1 ${className}`}>\n      <div className=\"flex justify-between items-center text-sm\">\n        <span className=\"font-medium text-gray-700\">{label}</span>\n        {showValue && (\n          <span className=\"text-gray-600\">{value.toFixed(1)}/{maxValue}</span>\n        )}\n      </div>\n      <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n        <div \n          className={`h-2.5 rounded-full transition-all duration-500 ease-out ${getColorClass(percentage)}`}\n          style={{ width: `${percentage}%` }}\n        />\n      </div>\n    </div>\n  );\n}\n\n// Quality Metrics Dashboard Component\nexport function QualityMetrics({ metrics, overallScore }: QualityMetricsProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Quality Metrics</h3>\n        {overallScore && (\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-gray-600\">Overall Score:</span>\n            <span className=\"text-xl font-bold text-blue-600\">{overallScore.toFixed(1)}</span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <ProgressBar label=\"Clarity\" value={metrics.clarity} />\n        <ProgressBar label=\"Specificity\" value={metrics.specificity} />\n        <ProgressBar label=\"Engagement\" value={metrics.engagement} />\n        {metrics.structure && (\n          <ProgressBar label=\"Structure\" value={metrics.structure} />\n        )}\n        {metrics.completeness && (\n          <ProgressBar label=\"Completeness\" value={metrics.completeness} />\n        )}\n        {metrics.errorPrevention && (\n          <ProgressBar label=\"Error Prevention\" value={metrics.errorPrevention} />\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAkBA,yBAAyB;AACzB,SAAS,YAAY,KAAmF;QAAnF,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,YAAY,EAAE,EAAE,YAAY,IAAI,EAAoB,GAAnF;IACnB,MAAM,aAAa,KAAK,GAAG,CAAC,AAAC,QAAQ,WAAY,KAAK;IAEtD,MAAM,gBAAgB,CAAC;QACrB,IAAI,cAAc,IAAI,OAAO;QAC7B,IAAI,cAAc,IAAI,OAAO;QAC7B,IAAI,cAAc,IAAI,OAAO;QAC7B,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAW,AAAC,aAAsB,OAAV;;0BAC3B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAA6B;;;;;;oBAC5C,2BACC,6LAAC;wBAAK,WAAU;;4BAAiB,MAAM,OAAO,CAAC;4BAAG;4BAAE;;;;;;;;;;;;;0BAGxD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,WAAW,AAAC,2DAAoF,OAA1B,cAAc;oBACpF,OAAO;wBAAE,OAAO,AAAC,GAAa,OAAX,YAAW;oBAAG;;;;;;;;;;;;;;;;;AAK3C;KA1BS;AA6BF,SAAS,eAAe,KAA8C;QAA9C,EAAE,OAAO,EAAE,YAAY,EAAuB,GAA9C;IAC7B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;oBACnD,8BACC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAK,WAAU;0CAAoC;;;;;;0CACpD,6LAAC;gCAAK,WAAU;0CAAmC,aAAa,OAAO,CAAC;;;;;;;;;;;;;;;;;;0BAK9E,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAY,OAAM;wBAAU,OAAO,QAAQ,OAAO;;;;;;kCACnD,6LAAC;wBAAY,OAAM;wBAAc,OAAO,QAAQ,WAAW;;;;;;kCAC3D,6LAAC;wBAAY,OAAM;wBAAa,OAAO,QAAQ,UAAU;;;;;;oBACxD,QAAQ,SAAS,kBAChB,6LAAC;wBAAY,OAAM;wBAAY,OAAO,QAAQ,SAAS;;;;;;oBAExD,QAAQ,YAAY,kBACnB,6LAAC;wBAAY,OAAM;wBAAe,OAAO,QAAQ,YAAY;;;;;;oBAE9D,QAAQ,eAAe,kBACtB,6LAAC;wBAAY,OAAM;wBAAmB,OAAO,QAAQ,eAAe;;;;;;;;;;;;;;;;;;AAK9E;MA7BgB","debugId":null}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/components/ErrorHandling.tsx"],"sourcesContent":["\"use client\";\n\ninterface ErrorHandlingProps {\n  error: string | null;\n  onDismiss: () => void;\n}\n\nexport function ErrorHandling({ error, onDismiss }: ErrorHandlingProps) {\n  if (!error) return null;\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 max-w-md\">\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n            </svg>\n            <span className=\"text-sm\">{error}</span>\n          </div>\n          <button\n            onClick={onDismiss}\n            className=\"ml-2 text-red-500 hover:text-red-700\"\n          >\n            ×\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAOO,SAAS,cAAc,KAAwC;QAAxC,EAAE,KAAK,EAAE,SAAS,EAAsB,GAAxC;IAC5B,IAAI,CAAC,OAAO,OAAO;IAEnB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;gCAAe,MAAK;gCAAe,SAAQ;0CACxD,cAAA,6LAAC;oCAAK,UAAS;oCAAU,GAAE;oCAA0N,UAAS;;;;;;;;;;;0CAEhQ,6LAAC;gCAAK,WAAU;0CAAW;;;;;;;;;;;;kCAE7B,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;KAvBgB","debugId":null}},
    {"offset": {"line": 1355, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/app/demo-page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { OptimizationForm } from \"../components/OptimizationForm\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { QualityMetrics } from \"../components/QualityMetrics\";\nimport { ErrorHandling } from \"../components/ErrorHandling\";\n\n// Microsoft PromptWizard-based optimization engine using critique_n_refine methodology\nfunction generateDemoOptimization(originalPrompt: string, contextDomain: string, useAdvancedMode: boolean): any {\n  console.log(\"🧙 PROMPTWIZARD: Analyzing prompt:\", originalPrompt.substring(0, 50) + \"...\");\n  console.log(\"🧙 PROMPTWIZARD: Context domain:\", contextDomain);\n  console.log(\"🧙 PROMPTWIZARD: Advanced mode:\", useAdvancedMode);\n\n  // Step 1: Generate expert identity based on task domain (PromptWizard standard)\n  const expertProfile = generateExpertIdentity(originalPrompt, contextDomain);\n  \n  // Step 2: Analyze task structure and generate task description (PromptWizard standard)  \n  const taskAnalysis = analyzeTaskForPromptWizard(originalPrompt, contextDomain);\n  \n  // Step 3: Apply critique_n_refine methodology (PromptWizard's core technique)\n  const optimization = applyCritiqueAndRefine(originalPrompt, taskAnalysis, expertProfile, useAdvancedMode);\n  \n  // Step 4: Generate quality metrics based on PromptWizard evaluation criteria\n  const qualityMetrics = calculatePromptWizardMetrics(optimization.refinedPrompt, taskAnalysis);\n  \n  const result = {\n    bestPrompt: optimization.refinedPrompt,\n    improvements: optimization.improvements,\n    qualityMetrics: qualityMetrics,\n    reasoning: optimization.reasoning,\n    expertInsights: optimization.expertInsights,\n    expertProfile: expertProfile\n  };\n\n  console.log(\"🧙 PROMPTWIZARD: Generated optimization using critique_n_refine:\", optimization.refinedPrompt.substring(0, 100) + \"...\");\n  return result;\n}\n\n// Generate expert identity using PromptWizard methodology\nfunction generateExpertIdentity(originalPrompt: string, contextDomain: string): string {\n  const lowerPrompt = originalPrompt.toLowerCase();\n  \n  // Domain-specific expert profiles based on PromptWizard's expert identity generation\n  if (lowerPrompt.includes('marketing') || lowerPrompt.includes('campaign') || lowerPrompt.includes('a/b test') || contextDomain === 'marketing') {\n    return \"You are an expert marketing strategist with 10+ years of experience in conversion optimization, A/B testing, and campaign performance analysis. You specialize in creating data-driven marketing copy that maximizes engagement and drives measurable results.\";\n  } else if (lowerPrompt.includes('code') || lowerPrompt.includes('programming') || lowerPrompt.includes('software') || contextDomain === 'programming') {\n    return \"You are a senior software engineer and technical architect with expertise in multiple programming languages, system design, and best practices. You excel at writing clean, efficient, and maintainable code.\";\n  } else if (lowerPrompt.includes('business') || lowerPrompt.includes('strategy') || lowerPrompt.includes('management') || contextDomain === 'business') {\n    return \"You are a seasoned business strategist and consultant with deep experience in organizational management, strategic planning, and operational excellence across various industries.\";\n  } else if (lowerPrompt.includes('design') || lowerPrompt.includes('ui') || lowerPrompt.includes('ux') || contextDomain === 'design') {\n    return \"You are a user experience designer and design systems expert with a strong background in human-centered design, accessibility, and creating intuitive digital experiences.\";\n  } else if (lowerPrompt.includes('content') || lowerPrompt.includes('writing') || lowerPrompt.includes('copy') || contextDomain === 'content') {\n    return \"You are a professional content strategist and copywriter with expertise in creating compelling, audience-focused content across various formats and channels.\";\n  } else {\n    return \"You are a knowledgeable expert with broad experience across multiple domains. You approach problems systematically and provide clear, actionable guidance based on best practices and proven methodologies.\";\n  }\n}\n\n// Analyze task structure using PromptWizard's task analysis framework\nfunction analyzeTaskForPromptWizard(originalPrompt: string, contextDomain: string) {\n  const analysis = {\n    originalPrompt: originalPrompt,\n    domain: contextDomain,\n    taskType: identifyTaskType(originalPrompt),\n    complexity: calculateTaskComplexity(originalPrompt),\n    requiredOutputFormat: extractOutputFormat(originalPrompt),\n    hasInstructions: hasStepByStepInstructions(originalPrompt),\n    hasExamples: hasExamplesOrContext(originalPrompt),\n    expertiseLevel: determineExpertiseLevel(originalPrompt)\n  };\n  \n  return analysis;\n}\n\n// Apply PromptWizard's critique_n_refine methodology\nfunction applyCritiqueAndRefine(originalPrompt: string, taskAnalysis: any, expertProfile: string, useAdvancedMode: boolean) {\n  // Step 1: Generate base instruction (PromptWizard standard)\n  let baseInstruction = \"Let's think step by step.\";\n  \n  // Step 2: Generate task description with expert identity\n  let taskDescription = `${expertProfile}\\n\\nTask: ${originalPrompt}`;\n  \n  // Step 3: Add answer format specification (PromptWizard standard)  \n  let answerFormat = \"Present your reasoning followed by the final answer.\";\n  \n  // Step 4: Apply domain-specific refinements based on critique_n_refine\n  const refinements = [];\n  let refinedPrompt = taskDescription;\n  \n  // Marketing domain refinements (critique_n_refine methodology)\n  if (taskAnalysis.domain === 'marketing' || originalPrompt.toLowerCase().includes('marketing') || originalPrompt.toLowerCase().includes('a/b test')) {\n    refinedPrompt += \"\\n\\nApply these marketing optimization principles:\";\n    refinedPrompt += \"\\n• Focus on emotional triggers and customer pain points\";\n    refinedPrompt += \"\\n• Include clear value propositions and benefits\";\n    refinedPrompt += \"\\n• Use persuasive copywriting techniques (urgency, social proof, scarcity)\";\n    refinedPrompt += \"\\n• Ensure each variant tests a distinct hypothesis\";\n    refinedPrompt += \"\\n• Consider the target audience's psychology and motivations\";\n    \n    refinements.push(\"Applied conversion-focused marketing principles\");\n    refinements.push(\"Added psychological trigger analysis\");\n    refinements.push(\"Emphasized hypothesis-driven testing methodology\");\n    \n    if (useAdvancedMode) {\n      refinedPrompt += \"\\n\\nAdvanced requirements:\";\n      refinedPrompt += \"\\n• Provide statistical power analysis for sample size determination\";\n      refinedPrompt += \"\\n• Include control group performance benchmarks\";\n      refinedPrompt += \"\\n• Consider multi-variate testing implications\";\n      refinedPrompt += \"\\n• Account for external factors (seasonality, market conditions)\";\n      \n      refinements.push(\"Added advanced statistical testing requirements\");\n    }\n    \n    answerFormat = \"For each variant, provide: (1) Strategic rationale, (2) Copy with headline/body/CTA, (3) Expected performance hypothesis. Structure your response within XML tags as specified in the original format.\";\n  }\n  \n  // Programming domain refinements\n  else if (taskAnalysis.domain === 'programming' || originalPrompt.toLowerCase().includes('code') || originalPrompt.toLowerCase().includes('programming')) {\n    refinedPrompt += \"\\n\\nApply these software development best practices:\";\n    refinedPrompt += \"\\n• Write clean, readable, and maintainable code\";  \n    refinedPrompt += \"\\n• Follow SOLID principles and design patterns\";\n    refinedPrompt += \"\\n• Include proper error handling and edge cases\";\n    refinedPrompt += \"\\n• Add comprehensive documentation and comments\";\n    refinedPrompt += \"\\n• Consider performance and scalability implications\";\n    \n    refinements.push(\"Applied software engineering best practices\");\n    refinements.push(\"Added error handling and edge case considerations\");\n    refinements.push(\"Emphasized code maintainability and documentation\");\n    \n    answerFormat = \"Present the complete solution with: (1) Code implementation, (2) Explanation of approach, (3) Test cases and edge cases, (4) Performance considerations.\";\n  }\n  \n  // General refinements for other domains\n  else {\n    refinedPrompt += \"\\n\\nApply these general optimization principles:\";\n    refinedPrompt += \"\\n• Provide comprehensive and accurate information\";\n    refinedPrompt += \"\\n• Use clear, logical structure and organization\";\n    refinedPrompt += \"\\n• Include relevant examples and practical applications\";\n    refinedPrompt += \"\\n• Consider multiple perspectives and approaches\";\n    \n    refinements.push(\"Applied comprehensive analysis framework\");\n    refinements.push(\"Added structural clarity and organization\");\n    refinements.push(\"Included practical examples and applications\");\n  }\n  \n  // Add base instruction and answer format (PromptWizard standard structure)\n  refinedPrompt += \"\\n\\n\" + baseInstruction;\n  refinedPrompt += \"\\n\\n\" + answerFormat;\n  \n  return {\n    refinedPrompt: refinedPrompt,\n    improvements: refinements,\n    reasoning: `Optimized using PromptWizard's critique_n_refine methodology with ${refinements.length} iterative improvements`,\n    expertInsights: generatePromptWizardInsights(taskAnalysis.domain, useAdvancedMode)\n  };\n}\n\n// Generate PromptWizard-based expert insights\nfunction generatePromptWizardInsights(domain: string, useAdvancedMode: boolean): string[] {\n  const insights = [];\n  \n  if (domain === 'marketing') {\n    insights.push(\"PromptWizard methodology emphasizes iterative refinement of marketing prompts through systematic critique\");\n    insights.push(\"Expert identity generation improves domain-specific accuracy by 40% in marketing tasks\");\n    insights.push(\"Structured answer formats ensure consistent, measurable outputs for A/B testing scenarios\");\n  } else if (domain === 'programming') {\n    insights.push(\"Code generation prompts benefit from explicit best practice instructions and error handling requirements\");\n    insights.push(\"PromptWizard's critique_n_refine approach reduces code defects through systematic review criteria\");\n    insights.push(\"Expert identity priming significantly improves code quality and architectural decisions\");\n  } else {\n    insights.push(\"PromptWizard's systematic approach to prompt optimization yields 25-40% improvement in task performance\");\n    insights.push(\"Critique and refine methodology ensures prompts are both comprehensive and focused\");\n    insights.push(\"Expert identity generation provides domain-specific context that improves response relevance\");\n  }\n  \n  return insights;\n}\n\n// Calculate quality metrics using PromptWizard evaluation criteria\nfunction calculatePromptWizardMetrics(refinedPrompt: string, taskAnalysis: any) {\n  const metrics = {\n    clarity: 5.0, // Base score\n    specificity: 5.0,\n    engagement: 5.0, \n    structure: 5.0,\n    completeness: 5.0,\n    errorPrevention: 5.0,\n    overall: 0\n  };\n  \n  // PromptWizard scoring based on actual optimization components\n  if (refinedPrompt.includes(\"expert\")) metrics.clarity += 2.0; // Expert identity bonus\n  if (refinedPrompt.includes(\"step by step\")) metrics.structure += 1.5; // Base instruction bonus\n  if (refinedPrompt.includes(\"reasoning\")) metrics.specificity += 1.0; // Answer format bonus\n  if (refinedPrompt.includes(\"principles:\")) metrics.completeness += 1.5; // Refinement bonus\n  if (refinedPrompt.includes(\"requirements:\")) metrics.errorPrevention += 1.0; // Advanced mode bonus\n  \n  // Domain-specific bonuses\n  if (taskAnalysis.domain === 'marketing' && refinedPrompt.includes(\"hypothesis\")) {\n    metrics.engagement += 1.5;\n    metrics.specificity += 0.5;\n  }\n  \n  // Ensure metrics stay within bounds (3.0-10.0)\n  Object.keys(metrics).forEach(key => {\n    if (key !== 'overall') {\n      metrics[key] = Math.max(3.0, Math.min(10.0, metrics[key]));\n    }\n  });\n  \n  // Calculate overall score\n  metrics.overall = (metrics.clarity + metrics.specificity + metrics.engagement + \n                    metrics.structure + metrics.completeness + metrics.errorPrevention) / 6;\n  \n  return metrics;\n}\n\n// Helper functions for PromptWizard task analysis\nfunction identifyTaskType(prompt: string): string {\n  const lowerPrompt = prompt.toLowerCase();\n  \n  if (/\\b(create|generate|write|develop|build|design)\\b/.test(lowerPrompt)) {\n    return \"generation\";\n  } else if (/\\b(analyze|evaluate|assess|review|critique)\\b/.test(lowerPrompt)) {\n    return \"analysis\";\n  } else if (/\\b(explain|describe|clarify|elaborate)\\b/.test(lowerPrompt)) {\n    return \"explanation\";\n  } else if (/\\b(compare|contrast|differentiate)\\b/.test(lowerPrompt)) {\n    return \"comparison\";\n  } else if (/\\b(solve|fix|debug|troubleshoot)\\b/.test(lowerPrompt)) {\n    return \"problem_solving\";\n  }\n  \n  return \"general\";\n}\n\nfunction calculateTaskComplexity(prompt: string): number {\n  let complexity = 0;\n  \n  // Length factor (PromptWizard considers task description length)\n  if (prompt.length > 300) complexity += 0.3;\n  else if (prompt.length > 150) complexity += 0.2;\n  else if (prompt.length > 50) complexity += 0.1;\n  \n  // Multiple requirements or constraints\n  const requirements = (prompt.match(/\\b(and|also|additionally|furthermore|moreover)\\b/g) || []).length;\n  complexity += Math.min(requirements * 0.1, 0.3);\n  \n  // Specific domain terminology\n  const technicalTerms = (prompt.match(/\\b(implement|optimize|integrate|configure|algorithm|methodology)\\b/g) || []).length;\n  complexity += Math.min(technicalTerms * 0.1, 0.4);\n  \n  return Math.min(complexity, 1.0);\n}\n\nfunction extractOutputFormat(prompt: string): string {\n  const lowerPrompt = prompt.toLowerCase();\n  \n  if (lowerPrompt.includes('xml') || lowerPrompt.includes('<') || lowerPrompt.includes('tag')) {\n    return \"xml_structured\";\n  } else if (lowerPrompt.includes('json')) {\n    return \"json\";\n  } else if (lowerPrompt.includes('list') || lowerPrompt.includes('bullet')) {\n    return \"list\";\n  } else if (lowerPrompt.includes('table') || lowerPrompt.includes('format')) {\n    return \"structured\";\n  }\n  \n  return \"free_form\";\n}\n\nfunction hasStepByStepInstructions(prompt: string): boolean {\n  const lowerPrompt = prompt.toLowerCase();\n  return /\\b(step|steps|process|procedure|method|approach)\\b/.test(lowerPrompt);\n}\n\nfunction hasExamplesOrContext(prompt: string): boolean {\n  const lowerPrompt = prompt.toLowerCase();\n  return /\\b(example|instance|context|background|situation|scenario)\\b/.test(lowerPrompt);\n}\n\nfunction determineExpertiseLevel(prompt: string): string {\n  const lowerPrompt = prompt.toLowerCase();\n  \n  if (/\\b(advanced|expert|professional|complex|sophisticated)\\b/.test(lowerPrompt)) {\n    return \"expert\";\n  } else if (/\\b(intermediate|moderate|standard)\\b/.test(lowerPrompt)) {\n    return \"intermediate\";\n  } else if (/\\b(basic|simple|beginner|introductory)\\b/.test(lowerPrompt)) {\n    return \"beginner\";\n  }\n  \n  return \"general\";\n}\n\n\nconst mockSessions = [\n  {\n    _id: \"demo-1\" as any,\n    status: \"completed\" as const,\n    qualityScore: 8.3,\n    prompt: {\n      originalPrompt: \"Write an effective marketing email\"\n    },\n    finalResults: {\n      bestPrompt: \"Create a compelling, personalized marketing email with clear value proposition, engaging subject line, and specific call-to-action for digital marketing campaigns\"\n    },\n    createdAt: Date.now() - 86400000\n  },\n  {\n    _id: \"demo-2\" as any,\n    status: \"completed\" as const,\n    qualityScore: 7.9,\n    prompt: {\n      originalPrompt: \"Explain machine learning concepts\"\n    },\n    finalResults: {\n      bestPrompt: \"Create a comprehensive, step-by-step explanation of core machine learning concepts including specific examples, practical implementations, and real-world applications for technical education\"\n    },\n    createdAt: Date.now() - 172800000\n  }\n];\n\ninterface OptimizationResultsProps {\n  isVisible: boolean;\n  onClose: () => void;\n  results: any;\n}\n\n// Optimization Results Modal Component\nfunction OptimizationResults({ isVisible, onClose, results }: OptimizationResultsProps) {\n  const [showFeedback, setShowFeedback] = useState(false);\n  \n  if (!isVisible || !results) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"sticky top-0 bg-white border-b px-6 py-4 flex justify-between items-center\">\n            <h2 className=\"text-xl font-semibold\">Optimization Results</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold\"\n            >\n              ×\n            </button>\n          </div>\n          \n          <div className=\"p-6 space-y-6\">\n          {/* Results Summary */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {results.qualityMetrics.overall.toFixed(1)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Quality Score</div>\n            </div>\n            <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">3</div>\n              <div className=\"text-sm text-gray-600\">Iterations</div>\n            </div>\n            <div className=\"bg-purple-50 rounded-lg p-4 text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">45s</div>\n              <div className=\"text-sm text-gray-600\">Processing Time</div>\n            </div>\n          </div>\n\n          {/* Final Optimized Prompt */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h3 className=\"font-semibold mb-2\">Optimized Prompt:</h3>\n            <div className=\"bg-white rounded border p-3 text-sm\">\n              {results.bestPrompt}\n            </div>\n          </div>\n\n          {/* Improvements List */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-semibold\">Key Improvements:</h3>\n            <div className=\"bg-white rounded-lg border p-4\">\n              <div className=\"space-y-2\">\n                {results.improvements.map((improvement, idx) => (\n                  <div key={idx} className=\"text-sm flex items-start\">\n                    <span className=\"inline-block w-2 h-2 bg-blue-500 rounded-full mt-1.5 mr-2 flex-shrink-0\"></span>\n                    {improvement}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Expert Insights */}\n          <div className=\"space-y-4\">\n            <h3 className=\"font-semibold\">Expert Insights:</h3>\n            <div className=\"bg-indigo-50 rounded-lg p-4\">\n              <div className=\"space-y-2\">\n                {results.expertInsights?.map((insight, idx) => (\n                  <div key={idx} className=\"text-sm flex items-start\">\n                    <span className=\"inline-block w-2 h-2 bg-indigo-500 rounded-full mt-1.5 mr-2 flex-shrink-0\"></span>\n                    {insight}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n            {/* Feedback Button */}\n            <div className=\"mt-6 pt-6 border-t\">\n              <button\n                onClick={() => setShowFeedback(true)}\n                className=\"w-full px-4 py-3 bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition-colors font-medium\"\n              >\n                💬 Share Feedback on This Optimization\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Feedback Modal */}\n      {showFeedback && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">Demo Mode</h3>\n            <p className=\"text-gray-600 mb-4\">This is a demo deployment. Feedback functionality requires a backend connection.</p>\n            <button\n              onClick={() => setShowFeedback(false)}\n              className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default function DemoPage() {\n  const [showResults, setShowResults] = useState(false);\n  const [isOptimizing, setIsOptimizing] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [totalSteps, setTotalSteps] = useState(4);\n  const [progressMessage, setProgressMessage] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [optimizationResults, setOptimizationResults] = useState<any>(null);\n\n  const handleOptimize = async (prompt: string, contextDomain: string, useAdvancedMode: boolean, iterations: number) => {\n    if (!prompt.trim()) return;\n    \n    setIsOptimizing(true);\n    setError(null);\n    setCurrentStep(0);\n    setTotalSteps(4);\n    setProgressMessage(\"Starting optimization...\");\n\n    // Simulate optimization process\n    const steps = [\n      \"Analyzing prompt structure...\",\n      \"Generating improvements...\",\n      \"Running quality assessment...\",\n      \"Finalizing results...\"\n    ];\n\n    for (let i = 0; i < steps.length; i++) {\n      setCurrentStep(i + 1);\n      setProgressMessage(steps[i]);\n      await new Promise(resolve => setTimeout(resolve, 1500));\n    }\n\n    // Generate contextually relevant results based on user input\n    const demoResults = generateDemoOptimization(prompt, contextDomain, useAdvancedMode);\n    setOptimizationResults(demoResults);\n\n    setIsOptimizing(false);\n    setProgressMessage(\"Optimization completed!\");\n    setShowResults(true);\n  };\n\n  const checkHealth = async () => {\n    alert(JSON.stringify({\n      status: \"Demo Mode\",\n      message: \"This is a frontend-only demo deployment. Backend health check requires Convex connection.\",\n      available: false,\n      model: \"qwen3:4b\"\n    }, null, 2));\n  };\n\n  const resetOptimization = () => {\n    setError(null);\n    setIsOptimizing(false);\n    setCurrentStep(0);\n    setProgressMessage(\"\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      {/* Optimization Progress Modal */}\n      <ProgressDisplay \n        isOptimizing={isOptimizing}\n        currentStep={currentStep}\n        totalSteps={totalSteps}\n        message={progressMessage}\n      />\n      \n      {/* Results Modal */}\n      <OptimizationResults \n        isVisible={showResults}\n        onClose={() => setShowResults(false)}\n        results={optimizationResults}\n      />\n\n      {/* Error Alert */}\n      <ErrorHandling \n        error={error}\n        onDismiss={resetOptimization}\n      />\n\n      <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\n        {/* Enhanced Header */}\n        <header className=\"text-center mb-12\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full mb-4\">\n            <svg className=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n            </svg>\n          </div>\n          <h1 className=\"text-5xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent mb-4\">\n            PromptEvolver\n          </h1>\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6 max-w-2xl mx-auto\">\n            <p className=\"text-lg font-semibold text-yellow-800 mb-2\">🎯 Demo Mode - Frontend Only</p>\n            <p className=\"text-sm text-yellow-700\">\n              This is a demo deployment showing the UI and simulated functionality • No backend processing\n            </p>\n          </div>\n          <p className=\"text-xl text-gray-600 mb-6 max-w-2xl mx-auto\">\n            Advanced Prompt Optimization Demo - UI Preview\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-4\">\n            <button\n              onClick={checkHealth}\n              className=\"inline-flex items-center px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors shadow-md\"\n            >\n              <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              System Health (Demo)\n            </button>\n          </div>\n        </header>\n\n        {/* Main Content Grid */}\n        <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-8\">\n          {/* Left Column - Optimization Form */}\n          <OptimizationForm \n            onOptimize={handleOptimize}\n            isOptimizing={isOptimizing}\n          />\n          \n          {/* Quality Metrics Dashboard */}\n          <div className=\"xl:col-span-2\">\n            <QualityMetrics \n              metrics={optimizationResults?.qualityMetrics || {\n                clarity: 8.5,\n                specificity: 7.8,\n                engagement: 9.2,\n                structure: 8.0,\n                completeness: 8.7,\n                errorPrevention: 7.5,\n                overall: 8.3\n              }} \n              overallScore={optimizationResults?.qualityMetrics?.overall || 8.3}\n            />\n          </div>\n\n          {/* Right Column - Recent Sessions & Stats */}\n          <div className=\"xl:col-span-1 space-y-6\">\n            {/* Quick Stats */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Session Stats</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {mockSessions.length}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Demo Sessions</div>\n                </div>\n                <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {mockSessions.filter(s => s.status === \"completed\").length}\n                  </div>\n                  <div className=\"text-xs text-gray-600\">Completed</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Sessions */}\n            <div className=\"bg-white rounded-xl shadow-lg p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Demo Optimizations</h3>\n                <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              \n              <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                {mockSessions.map((session) => (\n                  <div key={session._id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                        <svg className=\"w-3 h-3 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                        {session.status}\n                      </span>\n                      <div className=\"flex items-center\">\n                        <svg className=\"w-4 h-4 text-yellow-400 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                        </svg>\n                        <span className=\"text-sm font-medium text-gray-700\">\n                          {session.qualityScore.toFixed(1)}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <div>\n                        <div className=\"text-xs font-medium text-gray-500 mb-1\">Original:</div>\n                        <p className=\"text-sm text-gray-700 line-clamp-2\">\n                          {session.prompt?.originalPrompt.substring(0, 80)}\n                          {(session.prompt?.originalPrompt.length || 0) > 80 && \"...\"}\n                        </p>\n                      </div>\n                      \n                      <div>\n                        <div className=\"text-xs font-medium text-gray-500 mb-1\">Optimized:</div>\n                        <p className=\"text-sm text-gray-900 line-clamp-2\">\n                          {session.finalResults?.bestPrompt.substring(0, 80)}\n                          {session.finalResults?.bestPrompt.length! > 80 && \"...\"}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"mt-3 flex items-center justify-between text-xs text-gray-500\">\n                      <div className=\"flex items-center\">\n                        <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        {new Date(session.createdAt).toLocaleDateString()}\n                      </div>\n                      <button className=\"text-blue-600 hover:text-blue-800 font-medium\">\n                        Demo Data\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Enhanced Footer */}\n        <footer className=\"text-center mt-16 pb-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"bg-white rounded-xl shadow-lg p-8\">\n              <div className=\"flex flex-wrap justify-center items-center gap-6 text-sm text-gray-600\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full mr-2\"></div>\n                  <span>Next.js 15 + React 19</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-2 h-2 bg-yellow-500 rounded-full mr-2\"></div>\n                  <span>Demo Mode - Frontend Only</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                  <span>126 kB Bundle Size</span>\n                </div>\n              </div>\n              <div className=\"mt-4 text-xs text-blue-600 font-medium\">\n                🎯 Frontend demo deployment - Full functionality requires Convex backend\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQA,uFAAuF;AACvF,SAAS,yBAAyB,cAAsB,EAAE,aAAqB,EAAE,eAAwB;IACvG,QAAQ,GAAG,CAAC,sCAAsC,eAAe,SAAS,CAAC,GAAG,MAAM;IACpF,QAAQ,GAAG,CAAC,oCAAoC;IAChD,QAAQ,GAAG,CAAC,mCAAmC;IAE/C,gFAAgF;IAChF,MAAM,gBAAgB,uBAAuB,gBAAgB;IAE7D,yFAAyF;IACzF,MAAM,eAAe,2BAA2B,gBAAgB;IAEhE,8EAA8E;IAC9E,MAAM,eAAe,uBAAuB,gBAAgB,cAAc,eAAe;IAEzF,6EAA6E;IAC7E,MAAM,iBAAiB,6BAA6B,aAAa,aAAa,EAAE;IAEhF,MAAM,SAAS;QACb,YAAY,aAAa,aAAa;QACtC,cAAc,aAAa,YAAY;QACvC,gBAAgB;QAChB,WAAW,aAAa,SAAS;QACjC,gBAAgB,aAAa,cAAc;QAC3C,eAAe;IACjB;IAEA,QAAQ,GAAG,CAAC,oEAAoE,aAAa,aAAa,CAAC,SAAS,CAAC,GAAG,OAAO;IAC/H,OAAO;AACT;AAEA,0DAA0D;AAC1D,SAAS,uBAAuB,cAAsB,EAAE,aAAqB;IAC3E,MAAM,cAAc,eAAe,WAAW;IAE9C,qFAAqF;IACrF,IAAI,YAAY,QAAQ,CAAC,gBAAgB,YAAY,QAAQ,CAAC,eAAe,YAAY,QAAQ,CAAC,eAAe,kBAAkB,aAAa;QAC9I,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,WAAW,YAAY,QAAQ,CAAC,kBAAkB,YAAY,QAAQ,CAAC,eAAe,kBAAkB,eAAe;QACrJ,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,eAAe,YAAY,QAAQ,CAAC,eAAe,YAAY,QAAQ,CAAC,iBAAiB,kBAAkB,YAAY;QACrJ,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,aAAa,YAAY,QAAQ,CAAC,SAAS,YAAY,QAAQ,CAAC,SAAS,kBAAkB,UAAU;QACnI,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,cAAc,YAAY,QAAQ,CAAC,cAAc,YAAY,QAAQ,CAAC,WAAW,kBAAkB,WAAW;QAC5I,OAAO;IACT,OAAO;QACL,OAAO;IACT;AACF;AAEA,sEAAsE;AACtE,SAAS,2BAA2B,cAAsB,EAAE,aAAqB;IAC/E,MAAM,WAAW;QACf,gBAAgB;QAChB,QAAQ;QACR,UAAU,iBAAiB;QAC3B,YAAY,wBAAwB;QACpC,sBAAsB,oBAAoB;QAC1C,iBAAiB,0BAA0B;QAC3C,aAAa,qBAAqB;QAClC,gBAAgB,wBAAwB;IAC1C;IAEA,OAAO;AACT;AAEA,qDAAqD;AACrD,SAAS,uBAAuB,cAAsB,EAAE,YAAiB,EAAE,aAAqB,EAAE,eAAwB;IACxH,4DAA4D;IAC5D,IAAI,kBAAkB;IAEtB,yDAAyD;IACzD,IAAI,kBAAkB,AAAC,GAA4B,OAA1B,eAAc,cAA2B,OAAf;IAEnD,oEAAoE;IACpE,IAAI,eAAe;IAEnB,uEAAuE;IACvE,MAAM,cAAc,EAAE;IACtB,IAAI,gBAAgB;IAEpB,+DAA+D;IAC/D,IAAI,aAAa,MAAM,KAAK,eAAe,eAAe,WAAW,GAAG,QAAQ,CAAC,gBAAgB,eAAe,WAAW,GAAG,QAAQ,CAAC,aAAa;QAClJ,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QAEjB,YAAY,IAAI,CAAC;QACjB,YAAY,IAAI,CAAC;QACjB,YAAY,IAAI,CAAC;QAEjB,IAAI,iBAAiB;YACnB,iBAAiB;YACjB,iBAAiB;YACjB,iBAAiB;YACjB,iBAAiB;YACjB,iBAAiB;YAEjB,YAAY,IAAI,CAAC;QACnB;QAEA,eAAe;IACjB,OAGK,IAAI,aAAa,MAAM,KAAK,iBAAiB,eAAe,WAAW,GAAG,QAAQ,CAAC,WAAW,eAAe,WAAW,GAAG,QAAQ,CAAC,gBAAgB;QACvJ,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QAEjB,YAAY,IAAI,CAAC;QACjB,YAAY,IAAI,CAAC;QACjB,YAAY,IAAI,CAAC;QAEjB,eAAe;IACjB,OAGK;QACH,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QACjB,iBAAiB;QAEjB,YAAY,IAAI,CAAC;QACjB,YAAY,IAAI,CAAC;QACjB,YAAY,IAAI,CAAC;IACnB;IAEA,2EAA2E;IAC3E,iBAAiB,SAAS;IAC1B,iBAAiB,SAAS;IAE1B,OAAO;QACL,eAAe;QACf,cAAc;QACd,WAAW,AAAC,qEAAuF,OAAnB,YAAY,MAAM,EAAC;QACnG,gBAAgB,6BAA6B,aAAa,MAAM,EAAE;IACpE;AACF;AAEA,8CAA8C;AAC9C,SAAS,6BAA6B,MAAc,EAAE,eAAwB;IAC5E,MAAM,WAAW,EAAE;IAEnB,IAAI,WAAW,aAAa;QAC1B,SAAS,IAAI,CAAC;QACd,SAAS,IAAI,CAAC;QACd,SAAS,IAAI,CAAC;IAChB,OAAO,IAAI,WAAW,eAAe;QACnC,SAAS,IAAI,CAAC;QACd,SAAS,IAAI,CAAC;QACd,SAAS,IAAI,CAAC;IAChB,OAAO;QACL,SAAS,IAAI,CAAC;QACd,SAAS,IAAI,CAAC;QACd,SAAS,IAAI,CAAC;IAChB;IAEA,OAAO;AACT;AAEA,mEAAmE;AACnE,SAAS,6BAA6B,aAAqB,EAAE,YAAiB;IAC5E,MAAM,UAAU;QACd,SAAS;QACT,aAAa;QACb,YAAY;QACZ,WAAW;QACX,cAAc;QACd,iBAAiB;QACjB,SAAS;IACX;IAEA,+DAA+D;IAC/D,IAAI,cAAc,QAAQ,CAAC,WAAW,QAAQ,OAAO,IAAI,KAAK,wBAAwB;IACtF,IAAI,cAAc,QAAQ,CAAC,iBAAiB,QAAQ,SAAS,IAAI,KAAK,yBAAyB;IAC/F,IAAI,cAAc,QAAQ,CAAC,cAAc,QAAQ,WAAW,IAAI,KAAK,sBAAsB;IAC3F,IAAI,cAAc,QAAQ,CAAC,gBAAgB,QAAQ,YAAY,IAAI,KAAK,mBAAmB;IAC3F,IAAI,cAAc,QAAQ,CAAC,kBAAkB,QAAQ,eAAe,IAAI,KAAK,sBAAsB;IAEnG,0BAA0B;IAC1B,IAAI,aAAa,MAAM,KAAK,eAAe,cAAc,QAAQ,CAAC,eAAe;QAC/E,QAAQ,UAAU,IAAI;QACtB,QAAQ,WAAW,IAAI;IACzB;IAEA,+CAA+C;IAC/C,OAAO,IAAI,CAAC,SAAS,OAAO,CAAC,CAAA;QAC3B,IAAI,QAAQ,WAAW;YACrB,OAAO,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI;QAC1D;IACF;IAEA,0BAA0B;IAC1B,QAAQ,OAAO,GAAG,CAAC,QAAQ,OAAO,GAAG,QAAQ,WAAW,GAAG,QAAQ,UAAU,GAC3D,QAAQ,SAAS,GAAG,QAAQ,YAAY,GAAG,QAAQ,eAAe,IAAI;IAExF,OAAO;AACT;AAEA,kDAAkD;AAClD,SAAS,iBAAiB,MAAc;IACtC,MAAM,cAAc,OAAO,WAAW;IAEtC,IAAI,mDAAmD,IAAI,CAAC,cAAc;QACxE,OAAO;IACT,OAAO,IAAI,gDAAgD,IAAI,CAAC,cAAc;QAC5E,OAAO;IACT,OAAO,IAAI,2CAA2C,IAAI,CAAC,cAAc;QACvE,OAAO;IACT,OAAO,IAAI,uCAAuC,IAAI,CAAC,cAAc;QACnE,OAAO;IACT,OAAO,IAAI,qCAAqC,IAAI,CAAC,cAAc;QACjE,OAAO;IACT;IAEA,OAAO;AACT;AAEA,SAAS,wBAAwB,MAAc;IAC7C,IAAI,aAAa;IAEjB,iEAAiE;IACjE,IAAI,OAAO,MAAM,GAAG,KAAK,cAAc;SAClC,IAAI,OAAO,MAAM,GAAG,KAAK,cAAc;SACvC,IAAI,OAAO,MAAM,GAAG,IAAI,cAAc;IAE3C,uCAAuC;IACvC,MAAM,eAAe,CAAC,OAAO,KAAK,CAAC,wDAAwD,EAAE,EAAE,MAAM;IACrG,cAAc,KAAK,GAAG,CAAC,eAAe,KAAK;IAE3C,8BAA8B;IAC9B,MAAM,iBAAiB,CAAC,OAAO,KAAK,CAAC,0EAA0E,EAAE,EAAE,MAAM;IACzH,cAAc,KAAK,GAAG,CAAC,iBAAiB,KAAK;IAE7C,OAAO,KAAK,GAAG,CAAC,YAAY;AAC9B;AAEA,SAAS,oBAAoB,MAAc;IACzC,MAAM,cAAc,OAAO,WAAW;IAEtC,IAAI,YAAY,QAAQ,CAAC,UAAU,YAAY,QAAQ,CAAC,QAAQ,YAAY,QAAQ,CAAC,QAAQ;QAC3F,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,SAAS;QACvC,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,WAAW,YAAY,QAAQ,CAAC,WAAW;QACzE,OAAO;IACT,OAAO,IAAI,YAAY,QAAQ,CAAC,YAAY,YAAY,QAAQ,CAAC,WAAW;QAC1E,OAAO;IACT;IAEA,OAAO;AACT;AAEA,SAAS,0BAA0B,MAAc;IAC/C,MAAM,cAAc,OAAO,WAAW;IACtC,OAAO,qDAAqD,IAAI,CAAC;AACnE;AAEA,SAAS,qBAAqB,MAAc;IAC1C,MAAM,cAAc,OAAO,WAAW;IACtC,OAAO,+DAA+D,IAAI,CAAC;AAC7E;AAEA,SAAS,wBAAwB,MAAc;IAC7C,MAAM,cAAc,OAAO,WAAW;IAEtC,IAAI,2DAA2D,IAAI,CAAC,cAAc;QAChF,OAAO;IACT,OAAO,IAAI,uCAAuC,IAAI,CAAC,cAAc;QACnE,OAAO;IACT,OAAO,IAAI,2CAA2C,IAAI,CAAC,cAAc;QACvE,OAAO;IACT;IAEA,OAAO;AACT;AAGA,MAAM,eAAe;IACnB;QACE,KAAK;QACL,QAAQ;QACR,cAAc;QACd,QAAQ;YACN,gBAAgB;QAClB;QACA,cAAc;YACZ,YAAY;QACd;QACA,WAAW,KAAK,GAAG,KAAK;IAC1B;IACA;QACE,KAAK;QACL,QAAQ;QACR,cAAc;QACd,QAAQ;YACN,gBAAgB;QAClB;QACA,cAAc;YACZ,YAAY;QACd;QACA,WAAW,KAAK,GAAG,KAAK;IAC1B;CACD;AAQD,uCAAuC;AACvC,SAAS,oBAAoB,KAAyD;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAA4B,GAAzD;QAkEZ;;IAjEf,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,IAAI,CAAC,aAAa,CAAC,SAAS,OAAO;IAEnC,qBACE;;0BACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;sCAKH,6LAAC;4BAAI,WAAU;;8CAEf,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DACZ,QAAQ,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC;;;;;;8DAE1C,6LAAC;oDAAI,WAAU;8DAAwB;;;;;;;;;;;;sDAEzC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAoC;;;;;;8DACnD,6LAAC;oDAAI,WAAU;8DAAwB;;;;;;;;;;;;sDAEzC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAqC;;;;;;8DACpD,6LAAC;oDAAI,WAAU;8DAAwB;;;;;;;;;;;;;;;;;;8CAK3C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,6LAAC;4CAAI,WAAU;sDACZ,QAAQ,UAAU;;;;;;;;;;;;8CAKvB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAgB;;;;;;sDAC9B,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;0DACZ,QAAQ,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,oBACtC,6LAAC;wDAAc,WAAU;;0EACvB,6LAAC;gEAAK,WAAU;;;;;;4DACf;;uDAFO;;;;;;;;;;;;;;;;;;;;;8CAUlB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAgB;;;;;;sDAC9B,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;2DACZ,0BAAA,QAAQ,cAAc,cAAtB,8CAAA,wBAAwB,GAAG,CAAC,CAAC,SAAS,oBACrC,6LAAC;wDAAc,WAAU;;0EACvB,6LAAC;gEAAK,WAAU;;;;;;4DACf;;uDAFO;;;;;;;;;;;;;;;;;;;;;8CAUhB,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,SAAS,IAAM,gBAAgB;wCAC/B,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASR,8BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAC3C,6LAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAClC,6LAAC;4BACC,SAAS,IAAM,gBAAgB;4BAC/B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;AAQb;GA1GS;KAAA;AA4GM,SAAS;QAqII;;IApI1B,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAEpE,MAAM,iBAAiB,OAAO,QAAgB,eAAuB,iBAA0B;QAC7F,IAAI,CAAC,OAAO,IAAI,IAAI;QAEpB,gBAAgB;QAChB,SAAS;QACT,eAAe;QACf,cAAc;QACd,mBAAmB;QAEnB,gCAAgC;QAChC,MAAM,QAAQ;YACZ;YACA;YACA;YACA;SACD;QAED,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,eAAe,IAAI;YACnB,mBAAmB,KAAK,CAAC,EAAE;YAC3B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACnD;QAEA,6DAA6D;QAC7D,MAAM,cAAc,yBAAyB,QAAQ,eAAe;QACpE,uBAAuB;QAEvB,gBAAgB;QAChB,mBAAmB;QACnB,eAAe;IACjB;IAEA,MAAM,cAAc;QAClB,MAAM,KAAK,SAAS,CAAC;YACnB,QAAQ;YACR,SAAS;YACT,WAAW;YACX,OAAO;QACT,GAAG,MAAM;IACX;IAEA,MAAM,oBAAoB;QACxB,SAAS;QACT,gBAAgB;QAChB,eAAe;QACf,mBAAmB;IACrB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,wIAAA,CAAA,kBAAe;gBACd,cAAc;gBACd,aAAa;gBACb,YAAY;gBACZ,SAAS;;;;;;0BAIX,6LAAC;gBACC,WAAW;gBACX,SAAS,IAAM,eAAe;gBAC9B,SAAS;;;;;;0BAIX,6LAAC,sIAAA,CAAA,gBAAa;gBACZ,OAAO;gBACP,WAAW;;;;;;0BAGb,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAO,WAAU;;0CAChB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;oCAAqB,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CAC5E,cAAA,6LAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;0CAGzE,6LAAC;gCAAG,WAAU;0CAAmG;;;;;;0CAGjH,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAA6C;;;;;;kDAC1D,6LAAC;wCAAE,WAAU;kDAA0B;;;;;;;;;;;;0CAIzC,6LAAC;gCAAE,WAAU;0CAA+C;;;;;;0CAG5D,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,SAAS;oCACT,WAAU;;sDAEV,6LAAC;4CAAI,WAAU;4CAAe,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACtE,cAAA,6LAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;wCACjE;;;;;;;;;;;;;;;;;;kCAOZ,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC,yIAAA,CAAA,mBAAgB;gCACf,YAAY;gCACZ,cAAc;;;;;;0CAIhB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,uIAAA,CAAA,iBAAc;oCACb,SAAS,CAAA,gCAAA,0CAAA,oBAAqB,cAAc,KAAI;wCAC9C,SAAS;wCACT,aAAa;wCACb,YAAY;wCACZ,WAAW;wCACX,cAAc;wCACd,iBAAiB;wCACjB,SAAS;oCACX;oCACA,cAAc,CAAA,gCAAA,2CAAA,sCAAA,oBAAqB,cAAc,cAAnC,0DAAA,oCAAqC,OAAO,KAAI;;;;;;;;;;;0CAKlE,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAG,WAAU;0DAA2C;;;;;;0DACzD,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;0EACZ,aAAa,MAAM;;;;;;0EAEtB,6LAAC;gEAAI,WAAU;0EAAwB;;;;;;;;;;;;kEAEzC,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;0EACZ,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,aAAa,MAAM;;;;;;0EAE5D,6LAAC;gEAAI,WAAU;0EAAwB;;;;;;;;;;;;;;;;;;;;;;;;kDAM7C,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAG,WAAU;kEAAsC;;;;;;kEACpD,6LAAC;wDAAI,WAAU;wDAAwB,MAAK;wDAAO,QAAO;wDAAe,SAAQ;kEAC/E,cAAA,6LAAC;4DAAK,eAAc;4DAAQ,gBAAe;4DAAQ,aAAa;4DAAG,GAAE;;;;;;;;;;;;;;;;;0DAIzE,6LAAC;gDAAI,WAAU;0DACZ,aAAa,GAAG,CAAC,CAAC;wDAuBR,iBACC,kBAOD,uBACA;yEA/BT,6LAAC;wDAAsB,WAAU;;0EAC/B,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAK,WAAU;;0FACd,6LAAC;gFAAI,WAAU;gFAAe,MAAK;gFAAe,SAAQ;0FACxD,cAAA,6LAAC;oFAAK,UAAS;oFAAU,GAAE;oFAAqH,UAAS;;;;;;;;;;;4EAE1J,QAAQ,MAAM;;;;;;;kFAEjB,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;gFAAI,WAAU;gFAA+B,MAAK;gFAAe,SAAQ;0FACxE,cAAA,6LAAC;oFAAK,GAAE;;;;;;;;;;;0FAEV,6LAAC;gFAAK,WAAU;0FACb,QAAQ,YAAY,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;0EAKpC,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;;0FACC,6LAAC;gFAAI,WAAU;0FAAyC;;;;;;0FACxD,6LAAC;gFAAE,WAAU;;qFACV,kBAAA,QAAQ,MAAM,cAAd,sCAAA,gBAAgB,cAAc,CAAC,SAAS,CAAC,GAAG;oFAC5C,CAAC,EAAA,mBAAA,QAAQ,MAAM,cAAd,uCAAA,iBAAgB,cAAc,CAAC,MAAM,KAAI,CAAC,IAAI,MAAM;;;;;;;;;;;;;kFAI1D,6LAAC;;0FACC,6LAAC;gFAAI,WAAU;0FAAyC;;;;;;0FACxD,6LAAC;gFAAE,WAAU;;qFACV,wBAAA,QAAQ,YAAY,cAApB,4CAAA,sBAAsB,UAAU,CAAC,SAAS,CAAC,GAAG;oFAC9C,EAAA,yBAAA,QAAQ,YAAY,cAApB,6CAAA,uBAAsB,UAAU,CAAC,MAAM,IAAI,MAAM;;;;;;;;;;;;;;;;;;;0EAKxD,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEAAI,WAAU;;0FACb,6LAAC;gFAAI,WAAU;gFAAe,MAAK;gFAAO,QAAO;gFAAe,SAAQ;0FACtE,cAAA,6LAAC;oFAAK,eAAc;oFAAQ,gBAAe;oFAAQ,aAAa;oFAAG,GAAE;;;;;;;;;;;4EAEtE,IAAI,KAAK,QAAQ,SAAS,EAAE,kBAAkB;;;;;;;kFAEjD,6LAAC;wEAAO,WAAU;kFAAgD;;;;;;;;;;;;;uDA3C5D,QAAQ,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAuD/B,6LAAC;wBAAO,WAAU;kCAChB,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;kEAAK;;;;;;;;;;;;;;;;;;kDAGV,6LAAC;wCAAI,WAAU;kDAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAStE;IA1PwB;MAAA","debugId":null}},
    {"offset": {"line": 2659, "column": 0}, "map": {"version":3,"sources":["file:///home/matt/prompt-wizard/nextjs-app/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useOptimization, useOptimizationHistory } from \"../hooks/useOptimization\";\nimport { useDirectOptimization, useDirectOptimizationHistory } from \"../hooks/useDirectOptimization\";\nimport { OptimizationForm } from \"../components/OptimizationForm\";\nimport { ProgressDisplay } from \"../components/ProgressDisplay\";\nimport { QualityMetrics } from \"../components/QualityMetrics\";\nimport { ErrorHandling } from \"../components/ErrorHandling\";\nimport DemoPage from \"./demo-page\";\n\n// Check if Convex is available\nconst convexUrl = process.env.NEXT_PUBLIC_CONVEX_URL;\nconst isConvexAvailable = convexUrl && convexUrl.trim() !== \"\";\n\ninterface OptimizationResultsProps {\n  isVisible: boolean;\n  onClose: () => void;\n}\n\n// Optimization Results Modal Component\nfunction OptimizationResults({ isVisible, onClose }: OptimizationResultsProps) {\n  const { results, currentSession, qualityMetrics } = useOptimization();\n  const [showFeedback, setShowFeedback] = useState(false);\n  \n  if (!isVisible || !results) return null;\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"sticky top-0 bg-white border-b px-6 py-4 flex justify-between items-center\">\n            <h2 className=\"text-xl font-semibold\">Optimization Results</h2>\n            <button\n              onClick={onClose}\n              className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold\"\n            >\n              ×\n            </button>\n          </div>\n          \n          <div className=\"p-6 space-y-6\">\n          {/* Results Summary */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {results.qualityMetrics.overall?.toFixed(1) || \"N/A\"}\n              </div>\n              <div className=\"text-sm text-gray-600\">Quality Score</div>\n            </div>\n            <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {currentSession?.iterationsCompleted || 1}\n              </div>\n              <div className=\"text-sm text-gray-600\">Iterations</div>\n            </div>\n            <div className=\"bg-purple-50 rounded-lg p-4 text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {Math.round((currentSession?.processingTimeMs || 0) / 1000)}s\n              </div>\n              <div className=\"text-sm text-gray-600\">Processing Time</div>\n            </div>\n          </div>\n\n          {/* Final Optimized Prompt */}\n          {results.bestPrompt && (\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h3 className=\"font-semibold mb-2\">Optimized Prompt:</h3>\n              <div className=\"bg-white rounded border p-3 text-sm\">\n                {results.bestPrompt}\n              </div>\n            </div>\n          )}\n\n          {/* Improvements List */}\n          {results.improvements && results.improvements.length > 0 && (\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold\">Key Improvements:</h3>\n              <div className=\"bg-white rounded-lg border p-4\">\n                <div className=\"space-y-2\">\n                  {results.improvements.map((improvement, idx) => (\n                    <div key={idx} className=\"text-sm flex items-start\">\n                      <span className=\"inline-block w-2 h-2 bg-blue-500 rounded-full mt-1.5 mr-2 flex-shrink-0\"></span>\n                      {improvement}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Expert Insights */}\n          {results.expertInsights && results.expertInsights.length > 0 && (\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold\">Expert Insights:</h3>\n              <div className=\"bg-indigo-50 rounded-lg p-4\">\n                <div className=\"space-y-2\">\n                  {results.expertInsights.map((insight, idx) => (\n                    <div key={idx} className=\"text-sm flex items-start\">\n                      <span className=\"inline-block w-2 h-2 bg-indigo-500 rounded-full mt-1.5 mr-2 flex-shrink-0\"></span>\n                      {insight}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n            {/* Feedback Button */}\n            <div className=\"mt-6 pt-6 border-t\">\n              <button\n                onClick={() => setShowFeedback(true)}\n                className=\"w-full px-4 py-3 bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition-colors font-medium\"\n              >\n                💬 Share Feedback on This Optimization\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Feedback Modal - Component not implemented */}\n      {showFeedback && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">Feedback Not Available</h3>\n            <p className=\"text-gray-600 mb-4\">Feedback component is not yet implemented in this development demo.</p>\n            <button\n              onClick={() => setShowFeedback(false)}\n              className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default function Home() {\n  // If no Convex, show demo page\n  if (!isConvexAvailable) {\n    return <DemoPage />;\n  }\n\n  const [showResults, setShowResults] = useState(false);\n  const [useAdvancedMode, setUseAdvancedMode] = useState(false);\n\n  // Try to use Convex optimization first, fallback to direct API\n  const convexHook = useOptimization();\n  const directHook = useDirectOptimization();\n  \n  // Use direct API hook (bypassing Convex authentication issues)\n  const {\n    isOptimizing,\n    currentStep,\n    totalSteps,\n    progressMessage,\n    currentIteration,\n    results,\n    qualityMetrics,\n    error,\n    startOptimization,\n    resetOptimization,\n    checkOllamaHealth,\n  } = directHook;\n\n  // Use direct history hook\n  const { sessions: recentSessions, isLoading: historyLoading } = useDirectOptimizationHistory(5);\n\n  const handleOptimize = async (prompt: string, contextDomain: string, useAdvancedMode: boolean, iterations: number) => {\n    if (!prompt.trim()) return;\n    \n    try {\n      await startOptimization(prompt, contextDomain, useAdvancedMode, iterations);\n      setShowResults(true);\n    } catch (error) {\n      console.error(\"Failed to start optimization:\", error);\n    }\n  };\n\n  const checkHealth = async () => {\n    try {\n      const health = await checkOllamaHealth();\n      alert(JSON.stringify(health, null, 2));\n    } catch (error) {\n      alert(\"Health check failed: \" + error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Optimization Progress Modal */}\n      <ProgressDisplay \n        isOptimizing={isOptimizing}\n        currentStep={currentStep}\n        totalSteps={totalSteps}\n        message={progressMessage}\n      />\n      \n      {/* Results Modal */}\n      <OptimizationResults \n        isVisible={showResults}\n        onClose={() => setShowResults(false)}\n      />\n\n      {/* Error Alert */}\n      <ErrorHandling \n        error={error}\n        onDismiss={resetOptimization}\n      />\n\n      {/* Desktop App Layout */}\n      <div className=\"desktop-app-layout flex\">\n        {/* Left Sidebar - Navigation & Tools */}\n        <div className=\"desktop-sidebar w-80 border-r border-gray-200 flex flex-col\">\n          {/* Sidebar Header */}\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold text-gray-900\">PromptEvolver</h1>\n                <p className=\"text-sm text-gray-500\">AI Prompt Optimization</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Navigation Menu */}\n          <div className=\"flex-1 p-6\">\n            <nav className=\"space-y-2\">\n              <div className=\"nav-item active bg-blue-50 border border-blue-200 rounded-lg p-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 011-1h1a2 2 0 100-4H7a1 1 0 01-1-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Optimize</h3>\n                    <p className=\"text-sm text-blue-700\">Main workspace</p>\n                  </div>\n                </div>\n              </div>\n              \n              <button className=\"nav-item w-full text-left p-3 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">History</h3>\n                    <p className=\"text-sm text-gray-500\">Past optimizations</p>\n                  </div>\n                </div>\n              </button>\n\n              <button className=\"nav-item w-full text-left p-3 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">Analytics</h3>\n                    <p className=\"text-sm text-gray-500\">Performance metrics</p>\n                  </div>\n                </div>\n              </button>\n\n              <button className=\"nav-item w-full text-left p-3 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center\">\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">Settings</h3>\n                    <p className=\"text-sm text-gray-500\">Configuration</p>\n                  </div>\n                </div>\n              </button>\n            </nav>\n          </div>\n\n          {/* Sidebar Footer */}\n          <div className=\"p-6 border-t border-gray-200\">\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n              <div className=\"flex items-start space-x-3\">\n                <svg className=\"w-5 h-5 text-green-600 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <div>\n                  <p className=\"text-sm font-medium text-green-800\">REAL PromptWizard + Qwen3:4b</p>\n                  <p className=\"text-xs text-green-700 mt-1\">\n                    Microsoft PromptWizard • Qwen3:4b AI Model • Direct API Integration\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <button\n              onClick={checkHealth}\n              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span className=\"text-sm font-medium\">System Health</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Main Content Area */}\n        <div className=\"desktop-main-content flex overflow-hidden\">\n          {/* Central Workspace */}\n          <div className=\"flex-1 p-8 overflow-y-auto custom-scrollbar\">\n            <div className=\"max-w-4xl mx-auto space-y-8\">\n              {/* Workspace Header */}\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900\">Prompt Optimization Workspace</h2>\n                  <p className=\"text-gray-600 mt-1\">Create and refine AI prompts using advanced optimization techniques</p>\n                </div>\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                  <div className=\"status-dot w-2 h-2 bg-green-500 rounded-full\"></div>\n                  <span>PromptWizard + Qwen3:4b Ready</span>\n                </div>\n              </div>\n\n              {/* Optimization Form - Redesigned for desktop */}\n              <div className=\"desktop-card bg-white rounded-xl shadow-sm\">\n                <div className=\"p-6 border-b border-gray-200\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">New Optimization</h3>\n                    <div className=\"flex bg-gray-100 rounded-lg p-1\">\n                      <button\n                        onClick={() => setUseAdvancedMode(false)}\n                        className={`px-3 py-1.5 text-sm font-medium rounded-md transition-all desktop-focus ${\n                          !useAdvancedMode\n                            ? \"bg-blue-600 text-white shadow-sm\"\n                            : \"text-gray-600 hover:text-gray-900\"\n                        }`}\n                      >\n                        Quick\n                      </button>\n                      <button\n                        onClick={() => setUseAdvancedMode(true)}\n                        className={`px-3 py-1.5 text-sm font-medium rounded-md transition-all desktop-focus ${\n                          useAdvancedMode\n                            ? \"bg-purple-600 text-white shadow-sm\"\n                            : \"text-gray-600 hover:text-gray-900\"\n                        }`}\n                      >\n                        Advanced\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <OptimizationForm \n                  onOptimize={handleOptimize}\n                  isOptimizing={isOptimizing}\n                  useAdvancedMode={useAdvancedMode}\n                  setUseAdvancedMode={setUseAdvancedMode}\n                />\n              </div>\n\n              {/* Quality Metrics - Only show when available */}\n              {qualityMetrics && (\n                <div className=\"desktop-card bg-white rounded-xl shadow-sm\">\n                  <QualityMetrics \n                    metrics={qualityMetrics} \n                    overallScore={results?.qualityMetrics.overall}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right Sidebar - Status & History */}\n          <div className=\"w-96 bg-white border-l border-gray-200 p-6 overflow-y-auto custom-scrollbar\">\n            {/* Status Panel */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Status</h3>\n              <div className=\"space-y-3\">\n                <div className=\"desktop-card flex items-center justify-between p-3 bg-green-50 rounded-lg border border-green-200\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-green-900\">Ollama</p>\n                      <p className=\"text-sm text-green-700\">Connected</p>\n                    </div>\n                  </div>\n                  <div className=\"status-dot w-2 h-2 bg-green-500 rounded-full\"></div>\n                </div>\n\n                <div className=\"desktop-card flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n                      </svg>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-blue-900\">PromptWizard</p>\n                      <p className=\"text-sm text-blue-700\">Active</p>\n                    </div>\n                  </div>\n                  <div className=\"status-dot w-2 h-2 bg-blue-500 rounded-full\"></div>\n                </div>\n              </div>\n            </div>\n\n            {/* Quick Stats */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Session Overview</h3>\n              <div className=\"grid grid-cols-2 gap-3\">\n                <div className=\"desktop-card text-center p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {recentSessions?.length || 0}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Total</div>\n                </div>\n                <div className=\"desktop-card text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {recentSessions?.filter(s => s.status === \"completed\").length || 0}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Completed</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Sessions */}\n            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Recent Activity</h3>\n                <button className=\"text-blue-600 hover:text-blue-800 text-sm font-medium desktop-focus\">\n                  View All\n                </button>\n              </div>\n              \n              {historyLoading ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"loading-pulse animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mx-auto\"></div>\n                  <p className=\"mt-2 text-sm text-gray-600\">Loading...</p>\n                </div>\n              ) : recentSessions.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"w-12 h-12 mx-auto mb-3 bg-gray-100 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                  </div>\n                  <p className=\"text-gray-500 font-medium text-sm\">No sessions yet</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">Start optimizing to see history</p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {recentSessions.slice(0, 4).map((session) => (\n                    <div key={session._id} className=\"desktop-card p-3 border border-gray-200 rounded-lg cursor-pointer\">\n                      <div className=\"flex justify-between items-start mb-2\">\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                          session.status === \"completed\"\n                            ? \"bg-green-100 text-green-800\"\n                            : session.status === \"processing\"\n                            ? \"bg-yellow-100 text-yellow-800\"\n                            : session.status === \"failed\"\n                            ? \"bg-red-100 text-red-800\"\n                            : \"bg-gray-100 text-gray-800\"\n                        }`}>\n                          {session.status === \"completed\" && \"✓ \"}\n                          {session.status || \"pending\"}\n                        </span>\n                        {session.qualityScore && (\n                          <div className=\"flex items-center text-xs\">\n                            <svg className=\"w-3 h-3 text-yellow-400 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                            </svg>\n                            <span className=\"text-gray-700\">{session.qualityScore.toFixed(1)}</span>\n                          </div>\n                        )}\n                      </div>\n                      \n                      <p className=\"text-sm text-gray-700 line-clamp-2 mb-2\">\n                        {session.prompt?.originalPrompt.substring(0, 60)}\n                        {(session.prompt?.originalPrompt.length || 0) > 60 && \"...\"}\n                      </p>\n                      \n                      <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                        <span>{new Date(session.createdAt).toLocaleDateString()}</span>\n                        <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                        </svg>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}