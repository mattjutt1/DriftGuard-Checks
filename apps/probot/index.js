/**
 * DriftGuard Probot app: listens for `/driftguard run <dataset>` in PR comments
 * and creates a stub Check Run on the PR head SHA with a summary and links.
 */

/** @param {import('probot').Probot} app */
module.exports = (app) => {
  app.log.info('DriftGuard Probot app loaded');

  app.on('issue_comment.created', async (context) => {
    const body = context.payload.comment.body || '';
    const match = body.trim().match(/^\/driftguard\s+run\s+(\S+)/i);
    if (!match) return;

    const dataset = match[1];
    const owner = context.payload.repository.owner.login;
    const repo = context.payload.repository.name;

    // Ensure this is a PR comment
    const prRef = context.payload.issue.pull_request;
    if (!prRef) {
      context.log.info('Slash command used on an issue; ignoring.');
      return;
    }

    // Fetch PR to get head SHA
    const prNumber = context.payload.issue.number;
    const { data: pr } = await context.octokit.pulls.get({ owner, repo, pull_number: prNumber });
    const headSha = pr.head.sha;

    // Create an in-progress check run
    const checkName = 'driftguard-run';
    const startedAt = new Date().toISOString();
    const { data: check } = await context.octokit.checks.create({
      owner,
      repo,
      name: checkName,
      head_sha: headSha,
      status: 'in_progress',
      started_at: startedAt,
      details_url: `https://github.com/${owner}/${repo}/pull/${prNumber}`,
      output: {
        title: `DriftGuard run: ${dataset}`,
        summary: `Launching DriftGuard checks for dataset \`${dataset}\`. This is a stub run.`,
        text: [
          `- PR: #${prNumber}`,
          `- Head SHA: ${headSha}`,
          `- Trigger: /driftguard run ${dataset}`,
        ].join('\n'),
      },
    });

    // Immediately complete with neutral conclusion (stub)
    await context.octokit.checks.update({
      owner,
      repo,
      check_run_id: check.id,
      status: 'completed',
      completed_at: new Date().toISOString(),
      conclusion: 'neutral',
      output: {
        title: `DriftGuard run: ${dataset}`,
        summary: `Completed stub run for dataset \`${dataset}\`. Replace with real evaluation wiring.`,
        text: 'This check run was generated by the Probot app. Configure app permissions and replace with real logic.',
      },
    });

    // Respond to the comment for confirmation
    await context.octokit.issues.createComment({
      owner,
      repo,
      issue_number: prNumber,
      body: `âœ… DriftGuard stub run triggered for dataset \`${dataset}\`. Check Run: ${checkName}.`,
    });
  });
};

