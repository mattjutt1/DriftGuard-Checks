# Alternative Ollama deployment using socat port forwarding
# This approach runs Ollama on its default port and forwards Railway's PORT to it
FROM ollama/ollama:latest

# Install socat for port forwarding and other dependencies
RUN apt-get update && apt-get install -y \
    curl \
    socat \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Create supervisor config to manage both processes
RUN echo '[supervisord]\n\
nodaemon=true\n\
logfile=/var/log/supervisor/supervisord.log\n\
pidfile=/var/run/supervisord.pid\n\
\n\
[program:ollama]\n\
command=/usr/bin/ollama serve\n\
autostart=true\n\
autorestart=true\n\
stderr_logfile=/var/log/ollama.err.log\n\
stdout_logfile=/var/log/ollama.out.log\n\
environment=OLLAMA_HOST="127.0.0.1:11434"\n\
\n\
[program:socat]\n\
command=/bin/bash -c "sleep 10 && socat TCP-LISTEN:${PORT:-8080},fork,reuseaddr TCP:127.0.0.1:11434"\n\
autostart=true\n\
autorestart=true\n\
stderr_logfile=/var/log/socat.err.log\n\
stdout_logfile=/var/log/socat.out.log\n\
\n\
[program:model-pull]\n\
command=/bin/bash -c "sleep 30 && ollama pull qwen3:4b"\n\
autostart=true\n\
autorestart=false\n\
stderr_logfile=/var/log/model.err.log\n\
stdout_logfile=/var/log/model.out.log\n\
' > /etc/supervisor/conf.d/supervisord.conf

# Create startup script
RUN echo '#!/bin/bash\n\
echo "========================================"\n\
echo "ðŸš‚ Railway Ollama (Port Forwarding Mode)"\n\
echo "========================================"\n\
echo "Railway PORT: ${PORT:-8080}"\n\
echo "Ollama internal: 127.0.0.1:11434"\n\
echo "Forwarding: ${PORT:-8080} -> 11434"\n\
echo "========================================"\n\
\n\
# Create log directories\n\
mkdir -p /var/log/supervisor\n\
\n\
# Start supervisor to manage all processes\n\
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf\n\
' > /start-socat.sh && chmod +x /start-socat.sh

CMD ["/start-socat.sh"]