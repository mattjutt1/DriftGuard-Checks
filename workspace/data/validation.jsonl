{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution now. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post please, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics for me, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution for me. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends ASAP, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics quickly. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data quickly. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system now, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics please. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights quickly. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights now. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "Just Make a report with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends for me. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation now. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report ASAP, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "Just Design a solution with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "Just Make a report with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system ASAP. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics for me. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report ASAP, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution now. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "Just Analyze the data with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post now, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email for me. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling ASAP. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system please, for launching AI-powered CRM product in North American market. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "Just Fix the bug with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "Just Design a solution with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post ASAP. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution please. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Provide step-by-step reasoning, explain assumptions, justify decisions, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI please. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function now, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation for me, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report quickly. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "Just Make a report with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling now. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code for me with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system now. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling ASAP. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "Just Create a strategy with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function ASAP, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics please, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code now. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data for me. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling quickly. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report for me, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling now. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI now. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug quickly. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code now. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "Just Make a report with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "Just Create a blog post with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI for me. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process, for launching AI-powered CRM product in North American market. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
