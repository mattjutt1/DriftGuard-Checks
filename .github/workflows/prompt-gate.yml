name: Prompt Gate
on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch: {}

jobs:
  prompt-gate-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # TEMP: stub logic â€” pass when 'driftguard' label is present
      - name: Decide pass/fail from label
        id: decide
        run: |
          python - <<'PY'
          import json, os
          ev=json.load(open(os.environ['GITHUB_EVENT_PATH']))
          names=[l['name'] for l in ev['pull_request'].get('labels',[])]
          ok='driftguard' in names
          print(f"::set-output name=pass::{str(ok).lower()}")
          PY

      # Publish the legacy commit status that branch protection requires
      - name: Publish required status context
        if: always()
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:  ${{ github.repository }}
          SHA:   ${{ github.sha }}
          RUNURL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          state="failure"
          [ "${{ steps.decide.outputs.pass }}" = "true" ] && state="success"
          curl -sS -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/statuses/${SHA}" \
            -d "{\"state\":\"${state}\",\"context\":\"Prompt Gate / prompt-gate-ci\",\"target_url\":\"${RUNURL}\",\"description\":\"stub ${state}\"}"