{"created": 1754415461.4201534, "duration": 31.12119483947754, "exitcode": 1, "root": "/home/matt/prompt-wizard/cli", "environment": {}, "summary": {"passed": 23, "failed": 3, "total": 26, "collected": 26}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py", "type": "Module"}]}, {"nodeid": "tests/unit/test_client.py::TestConvexClient", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestConvexClient::test_client_initialization", "type": "Function", "lineno": 18}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_get_success", "type": "Function", "lineno": 29}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_post_success", "type": "Function", "lineno": 46}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_error_response", "type": "Function", "lineno": 68}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_http_error", "type": "Function", "lineno": 85}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_connection_error", "type": "Function", "lineno": 102}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_timeout", "type": "Function", "lineno": 112}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_fallback_response", "type": "Function", "lineno": 133}]}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestHealthCheck::test_check_health_success", "type": "Function", "lineno": 153}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck::test_check_health_failure", "type": "Function", "lineno": 178}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck::test_check_health_connection_error", "type": "Function", "lineno": 201}]}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_success", "type": "Function", "lineno": 213}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_failure", "type": "Function", "lineno": 255}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_api_error", "type": "Function", "lineno": 279}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_minimal_config", "type": "Function", "lineno": 299}]}, {"nodeid": "tests/unit/test_client.py::TestSessionMethods", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestSessionMethods::test_quick_optimize_not_implemented", "type": "Function", "lineno": 335}, {"nodeid": "tests/unit/test_client.py::TestSessionMethods::test_advanced_optimize_not_implemented", "type": "Function", "lineno": 344}]}, {"nodeid": "tests/unit/test_client.py::TestRequestHeaders", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestRequestHeaders::test_correct_headers_sent", "type": "Function", "lineno": 357}, {"nodeid": "tests/unit/test_client.py::TestRequestHeaders::test_json_encoding", "type": "Function", "lineno": 374}]}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_convex_error_exception", "type": "Function", "lineno": 403}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_malformed_json_response", "type": "Function", "lineno": 411}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_empty_response", "type": "Function", "lineno": 427}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_missing_status_field", "type": "Function", "lineno": 443}]}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability::test_large_request_handling", "type": "Function", "lineno": 462}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability::test_unicode_handling", "type": "Function", "lineno": 487}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability::test_timeout_configuration", "type": "Function", "lineno": 510}]}, {"nodeid": "tests/unit/test_client.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_client.py::TestConvexClient", "type": "Class"}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck", "type": "Class"}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt", "type": "Class"}, {"nodeid": "tests/unit/test_client.py::TestSessionMethods", "type": "Class"}, {"nodeid": "tests/unit/test_client.py::TestRequestHeaders", "type": "Class"}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling", "type": "Class"}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability", "type": "Class"}]}], "tests": [{"nodeid": "tests/unit/test_client.py::TestConvexClient::test_client_initialization", "lineno": 18, "outcome": "passed", "keywords": ["test_client_initialization", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.002066715998807922, "outcome": "passed"}, "call": {"duration": 0.00019286602037027478, "outcome": "passed"}, "teardown": {"duration": 0.00017141600255854428, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_get_success", "lineno": 29, "outcome": "passed", "keywords": ["test_call_http_endpoint_get_success", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00022834099945612252, "outcome": "passed"}, "call": {"duration": 0.0017857580096460879, "outcome": "passed"}, "teardown": {"duration": 0.00021669999114237726, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_post_success", "lineno": 46, "outcome": "passed", "keywords": ["test_call_http_endpoint_post_success", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00020725801005028188, "outcome": "passed"}, "call": {"duration": 0.0016111339791677892, "outcome": "passed"}, "teardown": {"duration": 0.00018938397988677025, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_error_response", "lineno": 68, "outcome": "failed", "keywords": ["test_call_http_endpoint_error_response", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0002322839864064008, "outcome": "passed"}, "call": {"duration": 0.001086434000171721, "outcome": "failed", "crash": {"path": "/home/matt/prompt-wizard/cli/tests/unit/test_client.py", "lineno": 84, "message": "AssertionError: assert 'Invalid request' in 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error'\n +  where 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error' = str(ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error'))\n +    where ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error') = <ExceptionInfo ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error') tblen=2>.value"}, "traceback": [{"path": "tests/unit/test_client.py", "lineno": 84, "message": "in test_call_http_endpoint_error_response"}], "longrepr": "tests/unit/test_client.py:84: in test_call_http_endpoint_error_response\n    assert \"Invalid request\" in str(exc_info.value)\nE   AssertionError: assert 'Invalid request' in 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error'\nE    +  where 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error' = str(ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error'))\nE    +    where ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error') = <ExceptionInfo ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/error') tblen=2>.value"}, "teardown": {"duration": 0.00021999998716637492, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_http_error", "lineno": 85, "outcome": "passed", "keywords": ["test_call_http_endpoint_http_error", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0002936079981736839, "outcome": "passed"}, "call": {"duration": 0.000917949975701049, "outcome": "passed"}, "teardown": {"duration": 0.00014813398593105376, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_connection_error", "lineno": 102, "outcome": "passed", "keywords": ["test_call_http_endpoint_connection_error", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00021505000768229365, "outcome": "passed"}, "call": {"duration": 0.0005696169973816723, "outcome": "passed"}, "teardown": {"duration": 0.00014400898362509906, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_timeout", "lineno": 112, "outcome": "failed", "keywords": ["test_call_http_endpoint_timeout", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00021669999114237726, "outcome": "passed"}, "call": {"duration": 31.001507683016825, "outcome": "failed", "crash": {"path": "/home/matt/prompt-wizard/cli/tests/unit/test_client.py", "lineno": 129, "message": "Failed: DID NOT RAISE <class 'promptevolver_cli.client.ConvexError'>"}, "traceback": [{"path": "tests/unit/test_client.py", "lineno": 129, "message": "in test_call_http_endpoint_timeout"}], "longrepr": "tests/unit/test_client.py:129: in test_call_http_endpoint_timeout\n    with pytest.raises(ConvexError) as exc_info:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   Failed: DID NOT RAISE <class 'promptevolver_cli.client.ConvexError'>"}, "teardown": {"duration": 0.00028450001263991, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestConvexClient::test_call_http_endpoint_fallback_response", "lineno": 133, "outcome": "passed", "keywords": ["test_call_http_endpoint_fallback_response", "__wrapped__", "TestConvexClient", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00028169999131932855, "outcome": "passed"}, "call": {"duration": 0.0010262999858241528, "outcome": "passed"}, "teardown": {"duration": 0.0001897999900393188, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck::test_check_health_success", "lineno": 153, "outcome": "passed", "keywords": ["test_check_health_success", "__wrapped__", "TestHealthCheck", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00024449999909847975, "outcome": "passed"}, "call": {"duration": 0.0008454000053461641, "outcome": "passed"}, "teardown": {"duration": 0.0001640999980736524, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck::test_check_health_failure", "lineno": 178, "outcome": "passed", "keywords": ["test_check_health_failure", "__wrapped__", "TestHealthCheck", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0002716000017244369, "outcome": "passed"}, "call": {"duration": 0.0009189000120386481, "outcome": "passed"}, "teardown": {"duration": 0.00018640002235770226, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestHealthCheck::test_check_health_connection_error", "lineno": 201, "outcome": "passed", "keywords": ["test_check_health_connection_error", "__wrapped__", "TestHealthCheck", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0005175000114832073, "outcome": "passed"}, "call": {"duration": 0.0008702000195626169, "outcome": "passed"}, "teardown": {"duration": 0.0001815000141505152, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_success", "lineno": 213, "outcome": "passed", "keywords": ["test_optimize_prompt_success", "__wrapped__", "TestOptimizePrompt", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0003183000080753118, "outcome": "passed"}, "call": {"duration": 0.0010244000004604459, "outcome": "passed"}, "teardown": {"duration": 0.00016480000340379775, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_failure", "lineno": 255, "outcome": "passed", "keywords": ["test_optimize_prompt_failure", "__wrapped__", "TestOptimizePrompt", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00024590000975877047, "outcome": "passed"}, "call": {"duration": 0.0008650999807287008, "outcome": "passed"}, "teardown": {"duration": 0.00020149999181739986, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_api_error", "lineno": 279, "outcome": "failed", "keywords": ["test_optimize_prompt_api_error", "__wrapped__", "TestOptimizePrompt", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00028149998979642987, "outcome": "passed"}, "call": {"duration": 0.0012119000020902604, "outcome": "failed", "crash": {"path": "/home/matt/prompt-wizard/cli/tests/unit/test_client.py", "lineno": 298, "message": "AssertionError: assert 'Invalid prompt format' in 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize'\n +  where 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize' = str(ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize'))\n +    where ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize') = <ExceptionInfo ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize') tblen=3>.value"}, "traceback": [{"path": "tests/unit/test_client.py", "lineno": 298, "message": "in test_optimize_prompt_api_error"}], "longrepr": "tests/unit/test_client.py:298: in test_optimize_prompt_api_error\n    assert \"Invalid prompt format\" in str(exc_info.value)\nE   AssertionError: assert 'Invalid prompt format' in 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize'\nE    +  where 'API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize' = str(ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize'))\nE    +    where ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize') = <ExceptionInfo ConvexError('API request failed: 400 Client Error: Bad Request for url: https://test.convex.cloud/optimize') tblen=3>.value"}, "teardown": {"duration": 0.0005322000070009381, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestOptimizePrompt::test_optimize_prompt_minimal_config", "lineno": 299, "outcome": "passed", "keywords": ["test_optimize_prompt_minimal_config", "__wrapped__", "TestOptimizePrompt", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00034679999225772917, "outcome": "passed"}, "call": {"duration": 0.0010826000070665032, "outcome": "passed"}, "teardown": {"duration": 0.00016299998969770968, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestSessionMethods::test_quick_optimize_not_implemented", "lineno": 335, "outcome": "passed", "keywords": ["test_quick_optimize_not_implemented", "TestSessionMethods", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00023720000172033906, "outcome": "passed"}, "call": {"duration": 0.0001542000100016594, "outcome": "passed"}, "teardown": {"duration": 0.00014200000441633165, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestSessionMethods::test_advanced_optimize_not_implemented", "lineno": 344, "outcome": "passed", "keywords": ["test_advanced_optimize_not_implemented", "TestSessionMethods", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00021510000806301832, "outcome": "passed"}, "call": {"duration": 0.00015090001397766173, "outcome": "passed"}, "teardown": {"duration": 0.0001412999990861863, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestRequestHeaders::test_correct_headers_sent", "lineno": 357, "outcome": "passed", "keywords": ["test_correct_headers_sent", "__wrapped__", "TestRequestHeaders", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0002280999906361103, "outcome": "passed"}, "call": {"duration": 0.0008828999998513609, "outcome": "passed"}, "teardown": {"duration": 0.000148899998748675, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestRequestHeaders::test_json_encoding", "lineno": 374, "outcome": "passed", "keywords": ["test_json_encoding", "__wrapped__", "TestRequestHeaders", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0002691000117920339, "outcome": "passed"}, "call": {"duration": 0.001080499991076067, "outcome": "passed"}, "teardown": {"duration": 0.00018360000103712082, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_convex_error_exception", "lineno": 403, "outcome": "passed", "keywords": ["test_convex_error_exception", "TestErrorHandling", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00025240000104531646, "outcome": "passed"}, "call": {"duration": 0.0001365999924018979, "outcome": "passed"}, "teardown": {"duration": 0.00014200000441633165, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_malformed_json_response", "lineno": 411, "outcome": "passed", "keywords": ["test_malformed_json_response", "__wrapped__", "TestErrorHandling", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00021229998674243689, "outcome": "passed"}, "call": {"duration": 0.0009777999948710203, "outcome": "passed"}, "teardown": {"duration": 0.00016120000509545207, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_empty_response", "lineno": 427, "outcome": "passed", "keywords": ["test_empty_response", "__wrapped__", "TestErrorHandling", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00022379998699761927, "outcome": "passed"}, "call": {"duration": 0.0008455000061076134, "outcome": "passed"}, "teardown": {"duration": 0.00017289997776970267, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestErrorHandling::test_missing_status_field", "lineno": 443, "outcome": "passed", "keywords": ["test_missing_status_field", "__wrapped__", "TestErrorHandling", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0002804000105243176, "outcome": "passed"}, "call": {"duration": 0.001483700005337596, "outcome": "passed"}, "teardown": {"duration": 0.0002872000040952116, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability::test_large_request_handling", "lineno": 462, "outcome": "passed", "keywords": ["test_large_request_handling", "__wrapped__", "TestPerformanceAndReliability", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00043990000267513096, "outcome": "passed"}, "call": {"duration": 0.001421299995854497, "outcome": "passed"}, "teardown": {"duration": 0.00021940001170150936, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability::test_unicode_handling", "lineno": 487, "outcome": "passed", "keywords": ["test_unicode_handling", "__wrapped__", "TestPerformanceAndReliability", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.0003358999965712428, "outcome": "passed"}, "call": {"duration": 0.0013905999949201941, "outcome": "passed"}, "teardown": {"duration": 0.0002911000046879053, "outcome": "passed"}}, {"nodeid": "tests/unit/test_client.py::TestPerformanceAndReliability::test_timeout_configuration", "lineno": 510, "outcome": "passed", "keywords": ["test_timeout_configuration", "__wrapped__", "patchings", "TestPerformanceAndReliability", "test_client.py", "unit", "tests", "cli", ""], "setup": {"duration": 0.00046249997103586793, "outcome": "passed"}, "call": {"duration": 0.001408900017850101, "outcome": "passed"}, "teardown": {"duration": 0.0002756000030785799, "outcome": "passed"}}]}