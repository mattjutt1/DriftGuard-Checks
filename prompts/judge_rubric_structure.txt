# PromptEvolver 3.0 - Structure Dimension Judge Rubric
# Evaluating prompt organization and logical flow (Score: 0.0-1.0)

## SCORING CRITERIA: STRUCTURE DIMENSION

### Score: 0.9-1.0 (Exceptional Structure)
**Definition**: Excellently organized, logical flow, easy to follow with clear hierarchy and seamless transitions

**Characteristics**:
- Perfect logical sequence that guides reader naturally
- Clear hierarchical organization with appropriate nesting
- Smooth transitions between sections and concepts
- Information presented in optimal cognitive order
- Visual and conceptual organization enhances comprehension
- Zero confusion about flow or relationship between elements

**Examples**:
- ✅ "**Role**: As a senior financial analyst specializing in quarterly reporting

  **Objective**: Create comprehensive Q3 performance analysis for executive decision-making

  **Data Sources**:
  - Q3 financial statements (P&L, Balance Sheet, Cash Flow)
  - YoY comparison data from Q3 2023
  - Industry benchmark data from competitors

  **Analysis Structure**:
  1. **Executive Summary** (2 pages)
     - Key findings and recommendations
     - Critical metrics overview
  2. **Financial Performance Analysis** (4 pages)
     - Revenue analysis with breakdown by segment
     - Profitability trends and margin analysis
     - Cash flow and liquidity assessment
  3. **Comparative Analysis** (3 pages)
     - YoY performance comparison
     - Industry benchmark positioning
     - Competitive performance insights
  4. **Strategic Recommendations** (2 pages)
     - Actionable improvement opportunities
     - Risk mitigation strategies
     - Q4 focus areas

  **Deliverable Format**:
  - PDF report with executive summary, detailed analysis, and appendices
  - PowerPoint presentation (10 slides) for board meeting
  - Excel workbook with supporting calculations and data

  **Success Criteria**: Analysis enables confident strategic decisions and provides clear Q4 direction"

**Evidence to Look For**:
- Clear section headers and logical progression
- Hierarchical organization (role → objective → requirements → process → deliverables)
- Smooth conceptual flow without cognitive jumps
- Appropriate information grouping and sequencing
- Visual structure that enhances comprehension

### Score: 0.7-0.8 (High Structure)
**Definition**: Well-structured with clear organization, mostly logical flow with minor organizational issues

**Characteristics**:
- Good overall organization with clear main sections
- Generally logical flow with occasional minor disruptions
- Most information appropriately grouped and sequenced
- Clear hierarchy for major elements
- Easy to follow with minimal confusion

**Examples**:
- ✅ "Create a Python web application using Flask framework:

  **Requirements**:
  - User authentication (login/logout/register)
  - Database integration with SQLAlchemy
  - Responsive design using Bootstrap
  - Admin dashboard for user management

  **Technical Specifications**:
  - Python 3.9+, Flask 2.0+, PostgreSQL database
  - JWT tokens for session management
  - Input validation and error handling
  - RESTful API endpoints for mobile app integration

  **Project Structure**:
  - Follow MVC pattern with separate models, views, controllers
  - Include unit tests with 80%+ coverage
  - Docker containerization for deployment
  - CI/CD pipeline setup with GitHub Actions"

  ⚠️ Good structure but could benefit from clearer flow between sections and more detailed hierarchy

**Evidence to Look For**:
- Clear main sections with logical grouping
- Good hierarchy for most elements
- Generally smooth transitions
- Minor areas where flow could be improved
- Overall easy to follow and implement

### Score: 0.5-0.6 (Moderate Structure)
**Definition**: Reasonably structured but could be clearer, some organizational issues present

**Characteristics**:
- Basic organization present but not optimal
- Some logical flow but with noticeable gaps or jumps
- Information somewhat grouped but not always logically
- Hierarchy unclear in places
- Requires some effort to follow and understand

**Examples**:
- ⚠️ "Build an e-commerce website with shopping cart, payment processing, user accounts, and inventory management. Use modern technologies and make it responsive. Include admin features for managing products, orders, and customers. Ensure good performance and security. Add search functionality and product recommendations. Deploy to cloud platform with monitoring."

  ⚠️ All elements present but lacks clear organization, logical flow, and hierarchical structure

**Evidence to Look For**:
- Basic grouping of related information
- Some structural elements but not comprehensive
- Inconsistent hierarchy or organization
- Flow disruptions that require re-reading
- Missing transitions between major concepts

### Score: 0.3-0.4 (Low Structure)
**Definition**: Poor organization, confusing flow, difficult to follow logical sequence

**Characteristics**:
- Minimal organizational structure
- Illogical or confusing sequence of information
- Related information scattered throughout
- No clear hierarchy or grouping
- Significant effort required to understand flow and relationships

**Examples**:
- ❌ "Create a database and also make sure it's secure and fast. You should use SQL and maybe add some users who can login. Make reports too for management and don't forget about backups. The interface should be user-friendly and work on mobile devices. Add analytics and reporting features."

  ❌ Information scattered, no logical flow, unclear relationships between elements

**Evidence to Look For**:
- Random order of information without logical sequence
- Related concepts separated by unrelated information
- No clear beginning, middle, end structure
- Missing organizational framework
- Confusing or contradictory flow

### Score: 0.0-0.2 (Poor Structure)
**Definition**: No clear organization, chaotic presentation, extremely difficult to follow

**Characteristics**:
- No discernible organizational structure
- Completely random or chaotic information presentation
- Impossible to follow logical flow
- No grouping of related information
- Creates confusion rather than clarity

**Examples**:
- ❌ "Make it work and look good and fast and secure users data reports mobile analytics backup login interface management SQL database"
- ❌ Complete lack of structure, stream-of-consciousness presentation

**Evidence to Look For**:
- No punctuation, sections, or organizational elements
- Stream-of-consciousness or keyword dump format
- No logical connections between elements
- Impossible to determine sequence or priority
- Creates cognitive overload rather than clarity

## STRUCTURAL EVALUATION FRAMEWORK

### Core Organization Principles

#### 1. Logical Sequencing
- **Context First**: Background and setup information provided early
- **Prerequisites Clear**: Dependencies and requirements established before actions
- **Natural Flow**: Information builds logically from general to specific
- **Conclusion Clarity**: Outcomes and success criteria clearly positioned

#### 2. Hierarchical Organization
- **Clear Levels**: Appropriate use of headers, subheaders, and nested information
- **Consistent Formatting**: Similar elements formatted consistently
- **Appropriate Nesting**: Information grouped at correct hierarchical levels
- **Visual Clarity**: Structure enhances rather than hinders comprehension

#### 3. Information Grouping
- **Related Elements Together**: Similar concepts and requirements clustered
- **Clear Boundaries**: Distinct separation between different topics or phases
- **Logical Categories**: Information grouped by type, priority, or sequence
- **Coherent Sections**: Each section has clear focus and purpose

#### 4. Transition Management
- **Smooth Connections**: Clear relationships between sections and concepts
- **Bridge Elements**: Transitional phrases or concepts that connect ideas
- **Flow Maintenance**: Reader can follow progression without confusion
- **Cognitive Load**: Information presented at appropriate pace and density

## COMMON STRUCTURE SCORING PITFALLS

### Over-Generous Scoring
- Don't award high scores for basic paragraph structure
- Avoid confusing completeness with good organization
- Don't credit implied structure that isn't explicitly clear
- Require actual logical flow, not just sectioned information

### Under-Generous Scoring
- Don't penalize domain-appropriate organizational conventions
- Consider that some complexity requires sophisticated structure
- Recognize effective implicit organization in expert-level prompts
- Account for audience expertise in evaluating structure clarity

### Context-Specific Errors
- Different domains have different optimal structural patterns
- Technical specifications require different organization than creative briefs
- Complex multi-step processes need different structure than simple tasks
- Audience expertise affects optimal information organization

## EVALUATION QUESTIONS FOR STRUCTURE ASSESSMENT

1. **Logical Flow**: Does the information progress logically from start to finish?
2. **Hierarchy Clarity**: Are relationships between different elements clear?
3. **Information Grouping**: Is related information appropriately clustered?
4. **Transition Smoothness**: Can I follow the progression without confusion?
5. **Cognitive Load**: Is information presented at an appropriate pace and density?
6. **Implementation Order**: Does the structure guide effective execution?

## STRUCTURAL PATTERNS BY SCORE LEVEL

### Excellent Structure Patterns (0.9-1.0)

#### The ROAST Pattern (Role, Objective, Analysis, Structure, Timeline)
- **Role**: Clear expert identity and context
- **Objective**: Specific goals and success criteria
- **Analysis**: Required inputs and considerations
- **Structure**: Detailed organization and hierarchy
- **Timeline**: Clear sequence and deliverable schedule

#### The PREP Pattern (Point, Reason, Example, Point)
- **Point**: Clear main objective or requirement
- **Reason**: Why this structure or approach is needed
- **Example**: Specific details or format requirements
- **Point**: Reiteration of key success criteria

### Good Structure Patterns (0.7-0.8)

#### The 3-Section Pattern
- **Setup**: Context, role, and objectives
- **Requirements**: Detailed specifications and constraints
- **Deliverables**: Expected outputs and success criteria

#### The Process Pattern
- **Inputs**: What's provided or available
- **Process**: Steps and methodology to follow
- **Outputs**: Expected results and format

## COMPARATIVE EXAMPLES BY SCORE RANGE

### Structure Enhancement Transformations

**Score 0.3 → 0.9 Transformation**:
- Before: "Create a marketing campaign for our new product with social media, email, content, analytics, budget management, target audience research, competitor analysis, and ROI measurement."
- After: "**Campaign Development Framework**

  **Phase 1: Strategic Foundation**
  - Target audience research and persona development
  - Competitor analysis and market positioning
  - Budget allocation and resource planning

  **Phase 2: Creative Development**
  - Content strategy and messaging framework
  - Visual identity and brand guidelines
  - Asset creation (social media, email, web)

  **Phase 3: Channel Implementation**
  - Social media campaign setup (Facebook, Instagram, LinkedIn)
  - Email marketing automation sequences
  - Content marketing distribution schedule

  **Phase 4: Performance Management**
  - Analytics setup and KPI tracking
  - ROI measurement and optimization
  - Campaign performance reporting"

**Score 0.6 → 0.9 Transformation**:
- Before: "Build a machine learning model to predict customer churn. Use Python and scikit-learn. Include data preprocessing, feature engineering, model training, evaluation, and deployment. Make sure to handle imbalanced data and provide interpretability."
- After: "**ML Model Development Pipeline**

  **1. Data Foundation**
  - Data collection and quality assessment
  - Exploratory data analysis and pattern identification
  - Data preprocessing and cleaning protocols

  **2. Feature Engineering**
  - Feature selection and creation methodology
  - Imbalanced data handling (SMOTE, class weighting)
  - Feature scaling and transformation

  **3. Model Development**
  - Algorithm selection and baseline establishment
  - Hyperparameter tuning with cross-validation
  - Model ensemble and stacking approaches

  **4. Evaluation Framework**
  - Performance metrics (precision, recall, F1, AUC-ROC)
  - Model interpretability (SHAP values, feature importance)
  - Business impact assessment

  **5. Production Deployment**
  - Model serialization and API endpoint creation
  - Monitoring and drift detection setup
  - Automated retraining pipeline"

## SCORING CONSISTENCY GUIDELINES

### Structure Score Validation Checklist

**Score 0.9-1.0 Requirements**:
- [ ] Perfect logical sequence with clear progression
- [ ] Hierarchical organization with appropriate nesting
- [ ] Smooth transitions between all sections
- [ ] Information grouped optimally for comprehension
- [ ] Visual structure enhances understanding
- [ ] Zero confusion about flow or relationships

**Score 0.7-0.8 Requirements**:
- [ ] Clear main sections with logical grouping
- [ ] Good hierarchy for major elements
- [ ] Generally smooth transitions
- [ ] Most information appropriately sequenced
- [ ] Easy to follow with minimal confusion

**Score 0.5-0.6 Requirements**:
- [ ] Basic organization present
- [ ] Some logical grouping of information
- [ ] Identifiable structure even if not optimal
- [ ] Followable with moderate effort
- [ ] Clear beginning and end points

## DOMAIN-SPECIFIC STRUCTURE CONSIDERATIONS

### Analytics Domain Optimal Structure
1. **Context and Objectives**: Business question and success criteria
2. **Data Specification**: Sources, formats, and quality requirements
3. **Analysis Framework**: Methods, tools, and statistical approaches
4. **Output Format**: Visualization, reporting, and presentation requirements
5. **Timeline and Deliverables**: Milestones and final deliverable specifications

### Coding Domain Optimal Structure
1. **Technical Context**: Project overview and system integration points
2. **Requirements Specification**: Functional and non-functional requirements
3. **Technical Architecture**: Technology stack, patterns, and design decisions
4. **Implementation Details**: Code structure, standards, and conventions
5. **Quality Assurance**: Testing, documentation, and deployment requirements

### Content Domain Optimal Structure
1. **Audience and Purpose**: Target audience, messaging objectives, brand context
2. **Content Strategy**: Tone, style, format, and distribution approach
3. **Creation Requirements**: Length, structure, media, and format specifications
4. **Quality Standards**: Review criteria, approval process, and success metrics
5. **Distribution and Optimization**: Channels, timing, and performance measurement

### Cross-Domain Optimal Structure
1. **Project Overview**: Scope, stakeholders, and integration requirements
2. **Domain-Specific Requirements**: Detailed specs for each involved domain
3. **Integration Framework**: How domains connect and dependencies
4. **Coordination Protocol**: Communication, review, and approval processes
5. **Unified Success Criteria**: Overall project success and individual domain metrics

## QUALITY ASSURANCE FOR STRUCTURE SCORING

### Pre-Score Analysis Process
1. **Scan for Overall Organization**: Identify main sections and hierarchy
2. **Trace Logical Flow**: Follow information progression from start to finish
3. **Check Information Grouping**: Verify related elements are clustered appropriately
4. **Assess Transition Quality**: Evaluate smoothness of connections between sections
5. **Validate Hierarchy**: Confirm appropriate nesting and organizational levels

### Structure Quality Indicators
**Positive Indicators**:
- Clear headers and subheaders that guide navigation
- Logical progression from context to specifics to outcomes
- Related information grouped together consistently
- Smooth transitions that maintain reader engagement
- Appropriate level of detail at each hierarchical level

**Negative Indicators**:
- Information scattered randomly without clear grouping
- Abrupt jumps between unrelated concepts
- Inconsistent formatting or organizational approach
- Missing organizational framework or hierarchy
- Cognitive overload from poor information flow

### Evidence Documentation for Structure Scores
For each structure score, document:
- **Organizational Framework**: How information is grouped and sequenced
- **Hierarchy Quality**: Evidence of clear levels and appropriate nesting
- **Flow Assessment**: Specific examples of smooth or disrupted transitions
- **Grouping Logic**: How related information is clustered
- **Improvement Opportunities**: Specific structural enhancements that could be made

---
**Copyright (c) 2025 Matthew J. Utt**
**PromptEvolver 3.0 Training System - Structure Rubric**
**Licensed under MIT License - Compatible with Microsoft PromptWizard Framework**
