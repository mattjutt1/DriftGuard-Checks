{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept for me. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan please. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report now with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email now. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system quickly. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system quickly. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "Just Create a blog post with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data quickly with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process for me. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "Just Add error handling with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, considering technical, financial, and organizational aspects. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "Just Create a blog post with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept please. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends for me. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI quickly. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics for me. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "Just Explain this concept with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept for me with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI ASAP, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling now with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post please. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy, considering technical, financial, and organizational aspects. Output format: structured plan with phases, milestones, deliverables, risk matrix, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post ASAP. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends ASAP with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system quickly. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "Just Explain this concept with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept ASAP, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics for me. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "Just Write about AI with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process ASAP. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Output format: structured plan with phases, milestones, deliverables, risk matrix. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI now with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan for me. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "Just Explain this concept with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "Just Draft an email with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster ASAP, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process. Output format: structured plan with phases, milestones, deliverables, risk matrix. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics now. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report quickly. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling quickly. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function please. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "Just Build a system with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling please, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics now with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report please. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster ASAP. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation quickly. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "Just Draft an email with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI ASAP with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "Just Create a blog post with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code please. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster quickly. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights please. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code for me, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept for me. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "Just Analyze the data with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process for me. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution ASAP, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution please. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights ASAP, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post for me, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report quickly. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends for me. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends now. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process please with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "Just Create a blog post with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster now, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics for me, include correlation analysis, predictive modeling, and anomaly detection. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function quickly, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation quickly. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "Just Add error handling with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email now, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept please, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation now. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI now. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends now. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends please. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept please, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code please. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation ASAP, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data now, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code now. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "Just Design a solution with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan quickly, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "Just Add error handling with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data now. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics now. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "Just Improve the process with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics please, specifically for Q3 2024 sales performance vs Q2 2024. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation for me. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug quickly. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process now. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report please. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept please, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code please, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "Just Improve the process with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "Just Fix the bug with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics now. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report now with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Provide step-by-step reasoning, explain assumptions, justify decisions, considering technical, financial, and organizational aspects. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "Just Improve the process with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights please. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function please. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI quickly. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post for me. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code now with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends quickly, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution please. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "Just Explain this concept with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post now, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code quickly with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling now, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept quickly with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "Just Help me plan with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process for me. Output format: structured plan with phases, milestones, deliverables, risk matrix. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "Just Build a system with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function please, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "Just Fix the bug with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept for me. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster now. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan now with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function quickly. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy please. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post now. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights now. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report quickly. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Output format: structured plan with phases, milestones, deliverables, risk matrix. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "Just Write about AI with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics now, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI ASAP. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "Just Create a blog post with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling ASAP. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report please. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "Just Build a system with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics quickly with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution now. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "Just Create a strategy with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email now, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code quickly, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution for me, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends quickly, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept quickly. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy please. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process please. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix, for launching AI-powered CRM product in North American market with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report please with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends quickly with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "Just Draft an email with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report quickly. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI now. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email please, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code for me, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI for me. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI for me. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights now, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code quickly. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email now, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster quickly with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling quickly. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept, focusing on GPT-4 vs Claude 3 capabilities comparison. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug please. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics for me. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "Just Create a strategy with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "Just Draft an email with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function please. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling ASAP. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system for me. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "Just Create a strategy with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system now. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Output format: structured plan with phases, milestones, deliverables, risk matrix. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling for me, with unit tests, documentation, backwards compatibility. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "Just Build a system with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster please, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report for me. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "Just Analyze the data with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "Just Fix the bug with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email ASAP. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug ASAP, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug quickly. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email for me. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends for me. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "Just Add error handling with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug for me. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email ASAP with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "Just Build a system with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data now. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process please, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug for me. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy quickly with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Output format: structured plan with phases, milestones, deliverables, risk matrix, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights quickly. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email now with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system, considering technical, financial, and organizational aspects with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation now with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, focusing on GPT-4 vs Claude 3 capabilities comparison. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster now. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "Just Help me plan with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post ASAP with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends ASAP. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics now. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data ASAP, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report for me. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "Just Add error handling with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now. Output format: unified diff format with inline comments explaining changes, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email for me. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI please, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics ASAP with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution now. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI now with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI ASAP, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process now, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company, considering technical, financial, and organizational aspects. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends now, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends quickly. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling please, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug ASAP, with unit tests, documentation, backwards compatibility. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept quickly, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends for me. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling please. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email ASAP. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling for me. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights now, include correlation analysis, predictive modeling, and anomaly detection. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email, focusing on GPT-4 vs Claude 3 capabilities comparison. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "Just Calculate metrics with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code quickly. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function quickly, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "Just Write about AI with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights now, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "Just Create a strategy with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code for me. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster, for the UserAuthentication class in auth.py line 145-200. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "Just Build a system with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code ASAP. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "Just Calculate metrics with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation quickly. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function ASAP, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy", "output": "Just Create a strategy with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy ASAP, for launching AI-powered CRM product in North American market. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function quickly. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post for me. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept for me, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights for me, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug quickly. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster for me. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "Just Add error handling with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation for me. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post for me. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function please, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "Just Explain this concept with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "Just Make this faster with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends, include correlation analysis, predictive modeling, and anomaly detection, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "Just Improve the process with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug now. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "Just Help me plan with no proper structure or requirements", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug quickly. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends quickly, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling please. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code now. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling please. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post ASAP, focusing on GPT-4 vs Claude 3 capabilities comparison, addressing beginners, intermediates, and experts differently. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends please. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "Just Optimize this code with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation please. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution, for launching AI-powered CRM product in North American market, considering technical, financial, and organizational aspects with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan, considering technical, financial, and organizational aspects. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function please. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data now with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code quickly. Output format: unified diff format with inline comments explaining changes. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation for me. Output format: markdown with headers, bullet points, code blocks where relevant, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan please, considering technical, financial, and organizational aspects. Context: for enterprise client, digital transformation initiative, Fortune 500 company with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution now. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market. Provide step-by-step reasoning, explain assumptions, justify decisions, considering technical, financial, and organizational aspects</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI ASAP with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process now, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug ASAP, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data quickly, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation for me with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights for me, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post now, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data now. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Output format: unified diff format with inline comments explaining changes. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends, include correlation analysis, predictive modeling, and anomaly detection. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends quickly, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Write a function ASAP. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution please. Output format: structured plan with phases, milestones, deliverables, risk matrix. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs, considering technical, financial, and organizational aspects. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: structured plan with phases, milestones, deliverables, risk matrix</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system quickly, for launching AI-powered CRM product in North American market. Output format: structured plan with phases, milestones, deliverables, risk matrix with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling quickly. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system quickly. Output format: structured plan with phases, milestones, deliverables, risk matrix. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Output format: markdown with headers, bullet points, code blocks where relevant. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "Just Show me trends with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "Just Write about AI with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "Just Make a report with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Draft an email quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Draft an email quickly, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster ASAP, for the UserAuthentication class in auth.py line 145-200 with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation please, addressing beginners, intermediates, and experts differently. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Context: for technical audience, B2B SaaS product, thought leadership piece with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends for me. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI", "output": "Just Write about AI with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy ASAP, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster please. Output format: unified diff format with inline comments explaining changes, for the UserAuthentication class in auth.py line 145-200. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Explain this concept ASAP. Context: for technical audience, B2B SaaS product, thought leadership piece. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality. Provide step-by-step reasoning, explain assumptions, justify decisions, focusing on GPT-4 vs Claude 3 capabilities comparison</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation for me with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations, addressing beginners, intermediates, and experts differently. Output format: markdown with headers, bullet points, code blocks where relevant. Context: for technical audience, B2B SaaS product, thought leadership piece</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster, for the UserAuthentication class in auth.py line 145-200. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database. Output format: unified diff format with inline comments explaining changes</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug for me. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation ASAP with constraints: 1500-2000 words, SEO optimized, include 3 examples, APA citations. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Context: for technical audience, B2B SaaS product, thought leadership piece, addressing beginners, intermediates, and experts differently</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "Just Fix the bug with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Improve the process quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Improve the process quickly. Output format: structured plan with phases, milestones, deliverables, risk matrix. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Context: for enterprise client, digital transformation initiative, Fortune 500 company, for launching AI-powered CRM product in North American market</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling quickly. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a strategy please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Create a strategy please. Provide step-by-step reasoning, explain assumptions, justify decisions, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling now. Evaluation criteria: performance improvement \u226520%, all tests pass, code readability maintained. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug please. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution now, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "Just What are the insights with no proper structure or requirements", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Help me plan please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Help me plan please. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment, for launching AI-powered CRM product in North American market. Context: for enterprise client, digital transformation initiative, Fortune 500 company</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data ASAP", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data ASAP. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Provide step-by-step reasoning, explain assumptions, justify decisions. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug, with unit tests, documentation, backwards compatibility. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends now. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics quickly. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}, specifically for Q3 2024 sales performance vs Q2 2024. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, specifically for Q3 2024 sales performance vs Q2 2024 with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Explain this concept", "output": "Just Explain this concept with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write documentation. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently, focusing on GPT-4 vs Claude 3 capabilities comparison. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write documentation", "output": "Just Write documentation with no proper structure or requirements", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report quickly. Provide step-by-step reasoning, explain assumptions, justify decisions, specifically for Q3 2024 sales performance vs Q2 2024, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Design a solution", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Design a solution with constraints: budget under $50k, 90-day timeline, 5-person team, measurable KPIs. Context: for enterprise client, digital transformation initiative, Fortune 500 company. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights for me. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Analyze the data quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Analyze the data quickly. Provide step-by-step reasoning, explain assumptions, justify decisions. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling, include correlation analysis, predictive modeling, and anomaly detection</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights, include correlation analysis, predictive modeling, and anomaly detection. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Show me trends", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Show me trends. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Provide step-by-step reasoning, explain assumptions, justify decisions. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling with constraints: within 95% confidence interval, handle missing values, limit to last 12 months</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Create a blog post", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Create a blog post. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, focusing on GPT-4 vs Claude 3 capabilities comparison. Output format: markdown with headers, bullet points, code blocks where relevant</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Optimize this code", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Optimize this code. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database, for the UserAuthentication class in auth.py line 145-200</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write about AI please", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>content</DOMAIN>\n<OBJECTIVE>Write about AI please, focusing on GPT-4 vs Claude 3 capabilities comparison. Evaluation criteria: engagement score >7/10, readability grade 8-10, factual accuracy, originality, addressing beginners, intermediates, and experts differently. Provide step-by-step reasoning, explain assumptions, justify decisions</OBJECTIVE>\n<CONTEXT>Brand voice guidelines, target audience demographics, content marketing strategy</CONTEXT>\n<REQUIREMENTS>1) Engaging introduction 2) Clear structure 3) Supporting evidence 4) Call-to-action</REQUIREMENTS>\n<CONSTRAINTS>SEO friendly, brand compliant, fact-checked, accessibility standards</CONSTRAINTS>\n<OUTPUT_FORMAT># Title\\n## Introduction\\n## Main Points\\n### Subpoints\\n## Conclusion</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Engagement metrics, readability score, accuracy, brand alignment</EVALUATION_CRITERIA>", "domain": "content", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Add error handling quickly", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Add error handling quickly with constraints: O(n log n) complexity, Python 3.10+, memory efficient, type-safe. Provide step-by-step reasoning, explain assumptions, justify decisions, with unit tests, documentation, backwards compatibility</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system, considering technical, financial, and organizational aspects, for launching AI-powered CRM product in North American market. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Write a function", "output": "Just Write a function with no proper structure or requirements", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make this faster now", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Make this faster now, with unit tests, documentation, backwards compatibility, for the UserAuthentication class in auth.py line 145-200. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "What are the insights", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>What are the insights. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling. Provide step-by-step reasoning, explain assumptions, justify decisions with constraints: within 95% confidence interval, handle missing values, limit to last 12 months. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Make a report", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Make a report. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list} with constraints: within 95% confidence interval, handle missing values, limit to last 12 months, specifically for Q3 2024 sales performance vs Q2 2024</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Calculate metrics", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>analytics</DOMAIN>\n<OBJECTIVE>Calculate metrics. Output format: JSON format: {\"summary\": str, \"metrics\": dict, \"visualizations\": list}. Context: using sales_data.csv with columns [date, product_id, revenue, region], 50k rows. Evaluation criteria: statistical accuracy, actionable insights, visual clarity, data quality handling</OBJECTIVE>\n<CONTEXT>Working with enterprise data warehouse, multiple data sources, business stakeholders need actionable insights</CONTEXT>\n<REQUIREMENTS>1) Descriptive statistics 2) Trend analysis 3) Predictive insights 4) Actionable recommendations</REQUIREMENTS>\n<CONSTRAINTS>Max 500ms query time, GDPR compliant, handle NULL values, confidence intervals</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"summary\": {\"key_findings\": [], \"metrics\": {}}, \"visualizations\": [], \"recommendations\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Statistical accuracy, business relevance, actionability, clarity of insights</EVALUATION_CRITERIA>", "domain": "analytics", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Build a system for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>cross_domain</DOMAIN>\n<OBJECTIVE>Build a system for me. Output format: structured plan with phases, milestones, deliverables, risk matrix, considering technical, financial, and organizational aspects. Evaluation criteria: feasibility, ROI projection, risk mitigation, stakeholder alignment</OBJECTIVE>\n<CONTEXT>Multiple departments involved, competing priorities, resource constraints</CONTEXT>\n<REQUIREMENTS>1) Stakeholder mapping 2) Timeline 3) Resource allocation 4) Success metrics</REQUIREMENTS>\n<CONSTRAINTS>Budget limits, regulatory compliance, timeline constraints, resource availability</CONSTRAINTS>\n<OUTPUT_FORMAT>{\"phases\": [], \"milestones\": [], \"deliverables\": [], \"risks\": []}</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Feasibility, completeness, risk assessment, stakeholder value</EVALUATION_CRITERIA>", "domain": "cross_domain", "schema_version": "1.2"}
{"instruction": "Transform this vague user prompt into a well-structured, detailed prompt for an LLM", "input": "Fix the bug for me", "output": "<SCHEMA_VERSION>1.2</SCHEMA_VERSION>\n<DOMAIN>coding</DOMAIN>\n<OBJECTIVE>Fix the bug for me, for the UserAuthentication class in auth.py line 145-200, with unit tests, documentation, backwards compatibility. Context: for a REST API handling 1000 req/s, Node.js environment, PostgreSQL database</OBJECTIVE>\n<CONTEXT>Production codebase, microservices architecture, CI/CD pipeline, high-traffic application</CONTEXT>\n<REQUIREMENTS>1) Performance benchmarks 2) Unit tests 3) Documentation 4) Code review checklist</REQUIREMENTS>\n<CONSTRAINTS>Backwards compatible, <100ms response time, <50MB memory, security best practices</CONSTRAINTS>\n<OUTPUT_FORMAT>```diff\\n+ additions\\n- deletions\\n```\\nWith inline comments</OUTPUT_FORMAT>\n<EVALUATION_CRITERIA>Performance improvement, test coverage, code quality, documentation completeness</EVALUATION_CRITERIA>", "domain": "coding", "schema_version": "1.2"}
